/*
 * ZafVen01_01.java
 *
 * Created on 9 de marzo de 2006, 9:12
 *
 * v0.1 
 */

package Contabilidad.ZafCon48;

import Librerias.ZafParSis.ZafParSis;
import Librerias.ZafUtil.ZafUtil;
import Librerias.ZafColNumerada.ZafColNumerada;
import Librerias.ZafTblUti.ZafTblMod.ZafTblMod;
import Librerias.ZafTblUti.ZafTblEdi.ZafTblEdi;
//import Librerias.ZafTblUti.ZafTblCelRenLbl.ZafTblCelRenLbl;
//import Librerias.ZafTblUti.ZafTblCelRenChk.ZafTblCelRenChk;
//import Librerias.ZafTblUti.ZafTblCelEdiChk.ZafTblCelEdiChk;
//import Librerias.ZafTblUti.ZafTblPopMnu.ZafTblPopMnu;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author  ilino
 */
public class ZafCon48_02 extends javax.swing.JDialog {
    
    
    //Constantes: Columnas del JTable:    
    //Variable
    private ZafParSis objParSis;
    private ZafUtil objUti;
    private ZafTblMod objTblMod;
    private ZafTblEdi objTblEdi;                        //Editor: Editor del JTable.
    private int intOpcSelDlg;
    public String strObs;
    private boolean blnCon;                             //true: Continua la ejecuci√≥n del hilo.
    
    final int intJspValMin=1;
    final int intJspValMax=100;
    final int intJspValIni=1;
    final int intJspValInc=1;    
    
    private int intNumFilSelMes;
    
    private double dblValIncDec;
    private char chrTipOpe;
    //Variables de la clase.
    
    /** Creates new form ZafVen01_01 */
      
     public ZafCon48_02(java.awt.Frame parent, boolean modal, ZafParSis obj, int numFil) {
         super(parent, modal);
        initComponents();
          //Inicializar objetos.
        objParSis=obj;
        objUti= new ZafUtil();
        jspPrcEst.setModel(new SpinnerNumberModel(intJspValIni, intJspValMin, intJspValMax, intJspValInc));
        lblTit.setText("Porcentaje de incremento/decremento");
        intNumFilSelMes=numFil;
        txtPrcDinInc.setEditable(false);
        txtPrcDinInc.setBackground(objParSis.getColorCamposSistema());
        System.out.println("Lee DESDE LA FUNCION EXTERNA: " + intNumFilSelMes);
        
        jspPrcEst.setEnabled(false);
        txtPrcDinMin.setEnabled(false);
        txtPrcDinMax.setEnabled(false);
        butCal.setEnabled(false);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        PanFrm = new javax.swing.JPanel();
        tabFrm = new javax.swing.JTabbedPane();
        panGen = new javax.swing.JPanel();
        panGenCab = new javax.swing.JPanel();
        lblTit = new javax.swing.JLabel();
        panGenDet = new javax.swing.JPanel();
        panGenDetPorEst = new javax.swing.JPanel();
        optPrcEst = new javax.swing.JRadioButton();
        lblPrcEst = new javax.swing.JLabel();
        jspPrcEst = new javax.swing.JSpinner();
        panGenDetPorDin = new javax.swing.JPanel();
        optPrcDin = new javax.swing.JRadioButton();
        lblPrcDinMin = new javax.swing.JLabel();
        txtPrcDinMin = new javax.swing.JTextField();
        lblPrcDinMax = new javax.swing.JLabel();
        txtPrcDinMax = new javax.swing.JTextField();
        lblPrcDinInc = new javax.swing.JLabel();
        txtPrcDinInc = new javax.swing.JTextField();
        panBar = new javax.swing.JPanel();
        panBot = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        butCal = new javax.swing.JButton();
        butAce = new javax.swing.JButton();
        butCan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        PanFrm.setLayout(new java.awt.BorderLayout());

        panGen.setLayout(new java.awt.BorderLayout());

        panGenCab.setLayout(new java.awt.BorderLayout());

        panGenCab.setPreferredSize(new java.awt.Dimension(0, 24));
        lblTit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTit.setText("lblTit");
        panGenCab.add(lblTit, java.awt.BorderLayout.CENTER);

        panGen.add(panGenCab, java.awt.BorderLayout.NORTH);

        panGenDet.setLayout(new java.awt.GridLayout(2, 0));

        panGenDetPorEst.setLayout(null);

        optPrcEst.setText("Porcentaje est\u00e1tico");
        optPrcEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optPrcEstActionPerformed(evt);
            }
        });

        panGenDetPorEst.add(optPrcEst);
        optPrcEst.setBounds(10, 4, 160, 23);

        lblPrcEst.setText("Porcentaje:");
        panGenDetPorEst.add(lblPrcEst);
        lblPrcEst.setBounds(64, 30, 70, 15);

        panGenDetPorEst.add(jspPrcEst);
        jspPrcEst.setBounds(155, 28, 70, 18);

        panGenDet.add(panGenDetPorEst);

        panGenDetPorDin.setLayout(null);

        optPrcDin.setText("Porcentaje din\u00e1mico");
        optPrcDin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optPrcDinActionPerformed(evt);
            }
        });

        panGenDetPorDin.add(optPrcDin);
        optPrcDin.setBounds(10, 4, 160, 23);

        lblPrcDinMin.setText("M\u00ednimo:");
        panGenDetPorDin.add(lblPrcDinMin);
        lblPrcDinMin.setBounds(44, 30, 46, 15);

        txtPrcDinMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrcDinMinFocusGained(evt);
            }
        });

        panGenDetPorDin.add(txtPrcDinMin);
        txtPrcDinMin.setBounds(90, 28, 60, 20);

        lblPrcDinMax.setText("M\u00e1ximo:");
        panGenDetPorDin.add(lblPrcDinMax);
        lblPrcDinMax.setBounds(180, 30, 50, 15);

        txtPrcDinMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrcDinMaxFocusGained(evt);
            }
        });

        panGenDetPorDin.add(txtPrcDinMax);
        txtPrcDinMax.setBounds(230, 28, 60, 20);

        lblPrcDinInc.setText("Incremento:");
        panGenDetPorDin.add(lblPrcDinInc);
        lblPrcDinInc.setBounds(320, 30, 70, 15);

        txtPrcDinInc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrcDinIncFocusGained(evt);
            }
        });

        panGenDetPorDin.add(txtPrcDinInc);
        txtPrcDinInc.setBounds(390, 28, 60, 20);

        panGenDet.add(panGenDetPorDin);

        panGen.add(panGenDet, java.awt.BorderLayout.CENTER);

        tabFrm.addTab("General", panGen);

        PanFrm.add(tabFrm, java.awt.BorderLayout.CENTER);

        panBar.setLayout(new java.awt.BorderLayout());

        panBot.setLayout(new java.awt.BorderLayout());

        panBot.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        butCal.setMnemonic('l');
        butCal.setText("Calcular");
        butCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCalActionPerformed(evt);
            }
        });

        jPanel1.add(butCal);

        butAce.setMnemonic('A');
        butAce.setText("Aceptar");
        butAce.setPreferredSize(new java.awt.Dimension(92, 25));
        butAce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAceActionPerformed(evt);
            }
        });

        jPanel1.add(butAce);

        butCan.setMnemonic('C');
        butCan.setText("Cancelar");
        butCan.setToolTipText("Si presiona cancelar se borrar\u00e1 lo que ha ingresado");
        butCan.setPreferredSize(new java.awt.Dimension(92, 25));
        butCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCanActionPerformed(evt);
            }
        });

        jPanel1.add(butCan);

        panBot.add(jPanel1, java.awt.BorderLayout.EAST);

        jPanel2.setLayout(new java.awt.BorderLayout());

        panBot.add(jPanel2, java.awt.BorderLayout.WEST);

        panBar.add(panBot, java.awt.BorderLayout.CENTER);

        PanFrm.add(panBar, java.awt.BorderLayout.SOUTH);

        getContentPane().add(PanFrm, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-500)/2, (screenSize.height-250)/2, 500, 250);
    }//GEN-END:initComponents

    private void butCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCalActionPerformed
        // TODO add your handling code here:
        if(optPrcDin.isSelected())
            getIncrementoDecrementoDinamico();
        if(optPrcEst.isSelected())
            getIncrementoDecrementoEstatico();
            
    }//GEN-LAST:event_butCalActionPerformed

    private void txtPrcDinMaxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrcDinMaxFocusGained
        // TODO add your handling code here:
        optPrcDin.setSelected(true);
        optPrcEst.setSelected(false);
    }//GEN-LAST:event_txtPrcDinMaxFocusGained

    private void txtPrcDinIncFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrcDinIncFocusGained
        // TODO add your handling code here:
        optPrcDin.setSelected(true);
        optPrcEst.setSelected(false);
    }//GEN-LAST:event_txtPrcDinIncFocusGained

    private void txtPrcDinMinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrcDinMinFocusGained
        // TODO add your handling code here:
        optPrcDin.setSelected(true);
        optPrcEst.setSelected(false);
    }//GEN-LAST:event_txtPrcDinMinFocusGained

    private void optPrcDinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optPrcDinActionPerformed
        // TODO add your handling code here:
        if(optPrcEst.isSelected())
            optPrcEst.setSelected(false);
        txtPrcDinMin.setEnabled(true);
        txtPrcDinMax.setEnabled(true);
        jspPrcEst.setEnabled(false);
        butCal.setEnabled(true);
    }//GEN-LAST:event_optPrcDinActionPerformed

    private void optPrcEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optPrcEstActionPerformed
        // TODO add your handling code here:
        if(optPrcDin.isSelected())
            optPrcDin.setSelected(false);
        jspPrcEst.setEnabled(true);
        txtPrcDinMin.setEnabled(false);
        txtPrcDinMax.setEnabled(false);
        butCal.setEnabled(false);
    }//GEN-LAST:event_optPrcEstActionPerformed

    private void butAceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAceActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_butAceActionPerformed

    private void butCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCanActionPerformed
//        txtPrcDinMin.setText("");
//        txtPrcDinMax.setText("");
//        txtPrcDinInc.setText("");
        String strTit, strMsg;
        javax.swing.JOptionPane oppMsg=new javax.swing.JOptionPane();
        strTit="Mensaje del sistema Zafiro";
        strMsg="¬øEst√° seguro que desea cerrar este programa?";
        if (oppMsg.showConfirmDialog(this,strMsg,strTit,javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE)==javax.swing.JOptionPane.YES_OPTION)
        {
            dispose();
        }
    }//GEN-LAST:event_butCanActionPerformed
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanFrm;
    private javax.swing.JButton butAce;
    private javax.swing.JButton butCal;
    private javax.swing.JButton butCan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jspPrcEst;
    private javax.swing.JLabel lblPrcDinInc;
    private javax.swing.JLabel lblPrcDinMax;
    private javax.swing.JLabel lblPrcDinMin;
    private javax.swing.JLabel lblPrcEst;
    private javax.swing.JLabel lblTit;
    private javax.swing.JRadioButton optPrcDin;
    private javax.swing.JRadioButton optPrcEst;
    private javax.swing.JPanel panBar;
    private javax.swing.JPanel panBot;
    private javax.swing.JPanel panGen;
    private javax.swing.JPanel panGenCab;
    private javax.swing.JPanel panGenDet;
    private javax.swing.JPanel panGenDetPorDin;
    private javax.swing.JPanel panGenDetPorEst;
    private javax.swing.JTabbedPane tabFrm;
    private javax.swing.JTextField txtPrcDinInc;
    private javax.swing.JTextField txtPrcDinMax;
    private javax.swing.JTextField txtPrcDinMin;
    // End of variables declaration//GEN-END:variables

    /** Cerrar la aplicaci√≥n. */
    private void exitForm(){        
        dispose();
    }    
    
    private void mostrarMsgInf(String strMsg){
        javax.swing.JOptionPane oppMsg=new javax.swing.JOptionPane();
        String strTit;
        strTit="Mensaje del sistema Zafiro";
        oppMsg.showMessageDialog(this,strMsg,strTit,javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }    
    
    
    
    private boolean getIncrementoDecrementoDinamico(){
        boolean blnRes=true;
        int intValMin=Integer.parseInt(txtPrcDinMin.getText());
        int intValMax=Integer.parseInt(txtPrcDinMax.getText());
        dblValIncDec=0.00;
        try{
            if(intValMin>intValMax)
                chrTipOpe='D';
            else
                chrTipOpe='I';
            
            dblValIncDec=(intValMin-intValMax);
            if(dblValIncDec!=0){
                dblValIncDec=Math.abs(dblValIncDec/(intNumFilSelMes-1));
                txtPrcDinInc.setText("" + objUti.redondear(dblValIncDec, objParSis.getDecimalesMostrar()));                
            }
            else{
                mostrarMsgInf("<HTML>La diferencia de valores m√≠nimo y m√°ximo es 0 <BR>Verifique el ingreso de datos y vuelva a intentarlo</HTML>");
                txtPrcDinInc.setText("" + objUti.redondear(0.00, objParSis.getDecimalesMostrar()));
            }
        }
        catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
            blnRes=false;
        }
        return blnRes;
    }
    
    
    private boolean getIncrementoDecrementoEstatico(){
        boolean blnRes=true;
        dblValIncDec=0.00;
        int intValJsp=Integer.parseInt(""+jspPrcEst.getValue());
        try{
            if(intValJsp<0)
                chrTipOpe='D';
            else
                chrTipOpe='I';
            
            dblValIncDec=Integer.parseInt(""+jspPrcEst.getValue());
            if(dblValIncDec!=0){
                dblValIncDec=Math.abs(dblValIncDec/(intNumFilSelMes-1));
            }
        }
        catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
            blnRes=false;
        }
        return blnRes;
    }
        
    
    
    
    
    public double getPorcentIncDec(){
        return dblValIncDec;
    }
    
    public char getTipoOperac(){
        return chrTipOpe;
    }
    
    public int getPorcentMinimo(){
        int intPrcIncDecRef=0;
        if(optPrcEst.isSelected()){
            intPrcIncDecRef=Integer.parseInt(""+jspPrcEst.getValue());
        }
        if(optPrcDin.isSelected())
            intPrcIncDecRef=Integer.parseInt(txtPrcDinMin.getText());
        
        return intPrcIncDecRef;
    }
    
    public int getPorcentMaximo(){
        return (Integer.parseInt(txtPrcDinMax.getText()));
    }
    
}
