/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Herramientas.ZafHer25;

import Herramientas.ZafHer25.ZafHer25;
import Herramientas.ZafHer25.ZafHer25_Aju;
import Librerias.ZafColNumerada.ZafColNumerada;
import Librerias.ZafParSis.ZafParSis;
import Librerias.ZafTblUti.ZafTblCelEdiButGen.ZafTblCelEdiButGen;
import Librerias.ZafTblUti.ZafTblCelEdiCbo.ZafTblCelEdiCbo;
import Librerias.ZafTblUti.ZafTblCelEdiTxt.ZafTblCelEdiTxt;
import Librerias.ZafTblUti.ZafTblCelRenBut.ZafTblCelRenBut;
import Librerias.ZafTblUti.ZafTblCelRenCbo.ZafTblCelRenCbo;
import Librerias.ZafTblUti.ZafTblCelRenLbl.ZafTblCelRenLbl;
import Librerias.ZafTblUti.ZafTblMod.ZafTblMod;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.EventListenerList;
import javax.swing.table.TableColumnModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Sistemas 5
 */
public class ZafHer25_CnfBod extends javax.swing.JInternalFrame {

    /**
     * Creates new form ZafCon64_CnfBod
     * 
     */
    static final int INT_TBL_BOD_DAT_LIN=0;
    static final int INT_TBL_BOD_CODIGO=1;
    static final int INT_TBL_BOD_MONTO_TOTAL=2;
    static final int INT_TBL_BOD_MONTO_DESEADO=3;
    static final int INT_TBL_BOD_MONTO_TRANSFERENCIA=4;
    static final int INT_TBL_BOD_PROCESAR=5;
    
    Vector vecCab=new Vector();
    ZafTblMod objTblMod;
    
    ZafTblCelRenCbo objTblCelRenCmbBox;   
    ZafTblCelEdiCbo objTblCelEdiCmbBox;
    ZafTblCelEdiButGen objTblCelEdiButGenProcesar;
    ZafParSis objParSis;
    Connection conexion;
    int intCodEmp;
    int intCodEmpDes;
    BigDecimal bgdValTra=BigDecimal.ZERO;
    JComboBox combo = new JComboBox();
    ZafHer25_Aju objZafCon64Aju;
    ZafHer25 objZafCon64;
    
    
    public ZafHer25_CnfBod(ZafParSis objZafParSis, int intCodEmpOri, BigDecimal bgdValTra, int intCodEmpDes, ZafHer25 objCon64) {       
        try{
            this.objParSis = (Librerias.ZafParSis.ZafParSis) objZafParSis.clone();
            initComponents();
            abrirCon();
            this.intCodEmp=intCodEmpOri;
            this.intCodEmpDes=intCodEmpDes;
            this.bgdValTra=bgdValTra;
            objZafCon64=objCon64;
        }catch(CloneNotSupportedException ex){
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDat = new javax.swing.JTable();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuracion de Bodegas"));

        tblDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDat.setRowHeight(18);
        jScrollPane1.setViewportView(tblDat);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        configuraTabla();
        objTblMod.setModoOperacion(ZafTblMod.INT_TBL_INS);
        objTblMod.setDataModelChanged(false);        
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDat;
    // End of variables declaration//GEN-END:variables

    
    
    private void cargarComboBodegas(int intCodEmp){
        Statement stm=null;
        ResultSet rst=null;
        String strQry="";
        ZafBodega objBodega=null;
        try{
            stm=conexion.createStatement();
            strQry="select co_bod,tx_nom from tbm_bod where co_emp="+intCodEmp;
            rst=stm.executeQuery(strQry);
            combo.removeAllItems();
            while(rst.next()){
                objBodega=new ZafBodega();
                objBodega.setIntCodBodega(rst.getInt("co_bod"));
                objBodega.setStrNombreBodega(rst.getString("tx_nom"));
                //objTblCelEdiCmbBox.addItem(objBodega);
                combo.addItem(objBodega);
            }
        }catch(Exception ex){
            ex.printStackTrace();
        } 
        finally{
            try{
                rst.close();
                stm.close();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }
    
    
    private void configuraTabla(){
        
        vecCab.clear();
        vecCab.add(INT_TBL_BOD_DAT_LIN, "");
        vecCab.add(INT_TBL_BOD_CODIGO, "Bodega");
        vecCab.add(INT_TBL_BOD_MONTO_TOTAL, "Monto Total Bodega");
        vecCab.add(INT_TBL_BOD_MONTO_DESEADO, "Monto Deseado");
        vecCab.add(INT_TBL_BOD_MONTO_TRANSFERENCIA,"Monto Transferencia");
        vecCab.add(INT_TBL_BOD_PROCESAR, "");
        objTblMod=new ZafTblMod();
        objTblMod.setHeader(vecCab);
        tblDat.setModel(objTblMod);
        
        tblDat.setRowSelectionAllowed(true);
        tblDat.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        ZafColNumerada zafColNumerada = new ZafColNumerada(tblDat, INT_TBL_BOD_DAT_LIN);    
        
        Vector vecAux=new Vector();
        vecAux.add(""+INT_TBL_BOD_CODIGO);
        vecAux.add(""+INT_TBL_BOD_MONTO_DESEADO);
        vecAux.add(""+INT_TBL_BOD_PROCESAR);
        objTblMod.setColumnasEditables(vecAux);
        
        objTblMod.setColumnDataType(INT_TBL_BOD_CODIGO, ZafTblMod.INT_COL_INT, new Integer(0), null);
        objTblMod.setColumnDataType(INT_TBL_BOD_MONTO_TOTAL, ZafTblMod.INT_COL_DBL, new Integer(0), null);
        objTblMod.setColumnDataType(INT_TBL_BOD_MONTO_DESEADO, ZafTblMod.INT_COL_DBL, new Integer(0), null);
        objTblMod.setColumnDataType(INT_TBL_BOD_MONTO_TRANSFERENCIA, ZafTblMod.INT_COL_DBL, new Integer(0), null);
        
        

        TableColumnModel tcmAux= tblDat.getColumnModel();
        
        ZafTblCelRenLbl objTblCelRenLbl = new ZafTblCelRenLbl();
        objTblCelRenLbl.setBackground(objParSis.getColorCamposObligatorios());
        objTblCelRenLbl.setHorizontalAlignment(JLabel.RIGHT);
        objTblCelRenLbl.setTipoFormato(ZafTblCelRenLbl.INT_FOR_NUM);
        objTblCelRenLbl.setFormatoNumerico(objParSis.getFormatoNumero(), false, true);
        tcmAux.getColumn(INT_TBL_BOD_MONTO_TOTAL).setCellRenderer(objTblCelRenLbl);
        tcmAux.getColumn(INT_TBL_BOD_MONTO_DESEADO).setCellRenderer(objTblCelRenLbl);
        tcmAux.getColumn(INT_TBL_BOD_MONTO_TRANSFERENCIA).setCellRenderer(objTblCelRenLbl);
        
        tcmAux.getColumn(INT_TBL_BOD_DAT_LIN).setPreferredWidth(20);
        tcmAux.getColumn(INT_TBL_BOD_CODIGO).setPreferredWidth(100);
        tcmAux.getColumn(INT_TBL_BOD_MONTO_TOTAL).setPreferredWidth(100);
        tcmAux.getColumn(INT_TBL_BOD_MONTO_DESEADO).setPreferredWidth(100);
        tcmAux.getColumn(INT_TBL_BOD_MONTO_TRANSFERENCIA).setPreferredWidth(100);
        tcmAux.getColumn(INT_TBL_BOD_PROCESAR).setPreferredWidth(30);

        objTblCelRenCmbBox=new ZafTblCelRenCbo();
        tcmAux.getColumn(INT_TBL_BOD_CODIGO).setCellRenderer(objTblCelRenCmbBox);

        //objTblCelEdiCmbBox=new ZafTblCelEdiCbo(tblDat);
        combo = new JComboBox();
        combo.setSelectedIndex(-1);
        
        tcmAux.getColumn(INT_TBL_BOD_MONTO_DESEADO).setCellEditor(new ZafTblCelEdiTxt(tblDat));
        
        tcmAux.getColumn(INT_TBL_BOD_CODIGO).setCellEditor(new DefaultCellEditor(combo));    
            combo.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        if (combo.getSelectedIndex()>0){
                            ZafBodega objBodega=(ZafBodega)combo.getSelectedItem();
                            BigDecimal bgdTotBod=obtenerTotalBodega(intCodEmp, objBodega.getIntCodBodega());
                            if (bgdTotBod==null || (bgdTotBod!=null && bgdTotBod.compareTo(BigDecimal.ZERO)==0)){
                                MensajeInf("La bodega no posee stock");
                            }else{
                                tblDat.setValueAt(bgdTotBod, tblDat.getSelectedRow(), INT_TBL_BOD_MONTO_TOTAL);
                                tblDat.setValueAt(bgdValTra, tblDat.getSelectedRow(), INT_TBL_BOD_MONTO_TRANSFERENCIA);
                                BigDecimal bgdMonRes=bgdValTra.subtract(objZafCon64.calculaTotalProcesado(intCodEmp, intCodEmpDes)).setScale(2, RoundingMode.HALF_UP);                                       
                                tblDat.setValueAt(bgdMonRes.toString(), tblDat.getSelectedRow(), INT_TBL_BOD_MONTO_DESEADO);
                            }
                        }
                    }
                }
            });
        
        ZafTblCelRenBut objTblCelRenBut=new ZafTblCelRenBut();
        tcmAux.getColumn(INT_TBL_BOD_PROCESAR).setCellRenderer(objTblCelRenBut);
        
        objTblCelEdiButGenProcesar=new ZafTblCelEdiButGen();
        tcmAux.getColumn(INT_TBL_BOD_PROCESAR).setCellEditor(objTblCelEdiButGenProcesar);
        objTblCelEdiButGenProcesar.addTableEditorListener(new Librerias.ZafTblUti.ZafTblEvt.ZafTableAdapter(){
            public void actionPerformed(Librerias.ZafTblUti.ZafTblEvt.ZafTableEvent evt){
                try{
                int intFilaActual=tblDat.getSelectedRow();
                ZafBodega objBodega=(ZafBodega)tblDat.getValueAt(intFilaActual,INT_TBL_BOD_CODIGO);
                String strMontoDeseado=(String)tblDat.getValueAt(intFilaActual,INT_TBL_BOD_MONTO_DESEADO);
                BigDecimal bgdMonDeseado=new BigDecimal(strMontoDeseado);                
                BigDecimal bgdTotProc=objZafCon64.calculaTotalProcesado(intCodEmp, intCodEmpDes);
                if(bgdTotProc.compareTo(bgdValTra)<0){
                    boolean booRes=objZafCon64.cargarItemsEgresoxBod(bgdMonDeseado, intCodEmp, intCodEmpDes, objBodega.getIntCodBodega());
                    if(booRes){
                        objTblMod.insertRow();
                    }
                }
                }catch(Exception ex){
                    ex.printStackTrace();
                }
            }
        });
        
        cargarComboBodegas(intCodEmp);     
    
    }
    
public class ZafTblCelEdiTxtFor extends javax.swing.DefaultCellEditor 
    {
        JFormattedTextField ftf;
        protected EventListenerList objEveLisLis=new EventListenerList();
        
        public ZafTblCelEdiTxtFor() 
        {
            super(new JFormattedTextField());
            ftf = (JFormattedTextField) getComponent();
            MaskFormatter maskformatter = null;

            try
            {
                maskformatter = new MaskFormatter("###,###.##");
                maskformatter.setPlaceholderCharacter(' ');
            } 
            catch (ParseException e) 
            {
                System.err.println("Formato no válido: " + e.getMessage());
                System.exit(-1);
            }

            ftf.setFormatterFactory(new DefaultFormatterFactory(maskformatter));
            ftf.setValue(null);
    //        ftf.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
            ftf.setFocusLostBehavior(JFormattedTextField.PERSIST);
            ftf.setBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0));
        }

        @Override
        public java.awt.Component getTableCellEditorComponent(javax.swing.JTable table, Object value, boolean isSelected, int row, int column) {
            JFormattedTextField ftf = (JFormattedTextField) super.getTableCellEditorComponent(table, value, isSelected, row, column);
            System.out.println("getTableCellEditorComponent: " + value);
            ftf.setValue(value);
            return ftf;
        }

        @Override
        public Object getCellEditorValue() {
            JFormattedTextField ftf = (JFormattedTextField) getComponent();
            try {
                ftf.commitEdit();
            } catch (ParseException e) {
                System.out.println("Exception:" + e.getMessage() + " Texto: " + ftf.getText() ); 
                ftf.setValue(null);
            }

            System.out.println("getCellEditorValue: " + ftf.getValue());
            System.out.println("getCellEditorTexto: " + ftf.getText());
            return ftf.getValue();
        }        

    }    
    
    
    
    public void abrirCon() {
        try {
            conexion = java.sql.DriverManager.getConnection(objParSis.getStringConexion(), objParSis.getUsuarioBaseDatos(), objParSis.getClaveBaseDatos());
            conexion.setAutoCommit(false);
        } catch (java.sql.SQLException Evt) {
            //objUti.mostrarMsgErr_F1(this, Evt);
            Evt.printStackTrace();
        }
    }    
    
    private BigDecimal obtenerTotalBodega(int intCoEmp, int intCoBod){
        BigDecimal bgdTotBod=BigDecimal.ZERO;
        Statement stm=null;
        ResultSet rst=null;
        String strQry="";
        try{
            stm=conexion.createStatement();
            strQry=" SELECT sum(a2.nd_candis*a1.nd_cosUni) as tot \n" +
                   " FROM tbm_inv AS a1 " +
                   " INNER JOIN tbm_invBod AS a2 " +
                   " ON (a1.co_emp=a2.co_emp AND a1.co_itm=a2.co_itm) \n" +
                   " where a1.co_emp="+intCoEmp+" \n" +
                   " and a2.co_bod="+intCoBod+" \n" +
                   " AND a2.nd_candis>0 \n"+
                   " AND (a2.nd_candis*a1.nd_cosUni)>0 \n"+
                   " AND a1.st_reg='A' ";

            rst=stm.executeQuery(strQry);
            //objTblCelEdiCmbBox.removeAllItems();
            while(rst.next()){
                bgdTotBod=rst.getBigDecimal("tot");
            }
        }catch(Exception ex){
            ex.printStackTrace();
        } 
        finally{
            try{
                rst.close();
                stm.close();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }       
       
       return bgdTotBod;
    }
    
    private void MensajeInf(String strMensaje) {
        //JOptionPane obj =new JOptionPane();
        String strTit;
        strTit = "Mensaje del sistema Zafiro";
        JOptionPane.showMessageDialog(this, strMensaje, strTit, JOptionPane.INFORMATION_MESSAGE);
    }


}
