/*
 * ZafSeg02.java
 *
 * Created on 11 de octubre de 2006, 01:29 PM
 */

package Seguridades.ZafSeg02;
import Librerias.ZafParSis.ZafParSis;
import Librerias.ZafUtil.ZafUtil;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.DriverManager;
  
/**
 *
 * @author  jayapata  
 */
public class ZafSeg02 extends javax.swing.JInternalFrame {
    
     private ZafParSis objZafParSis;
     private ZafUtil objUti;
     private Connection con;
     private Statement stm;
     private ResultSet rst;   
     private String strSQL; 
     private int intDiaProActCla; 
     
    /** Creates new form ZafSeg02 */
    public ZafSeg02(ZafParSis obj) {
        try
        { 
         objZafParSis = obj;
         objUti = new ZafUtil();
         this.setTitle(objZafParSis.getNombreMenu()+" ver 1.3 ");
           
         
         initComponents();
        
          if (!configurarDlg())
                exitForm();   
       
        }catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
        }
    }
    
    
    
      
    private boolean configurarDlg()
    {
        boolean blnResp = true;
        try
        {
            lblNomUsu.setText(objZafParSis.getNombreUsuario());        
        }catch(Exception e){
            blnResp = false;
            objUti.mostrarMsgErr_F1(this, e);
        }
        return blnResp;
    }
    
    
    
      private void exitForm()
    {
        try{
            dispose();
        }catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        PanTit = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PanCen = new javax.swing.JPanel();
        Tabgen = new javax.swing.JTabbedPane();
        PanGen = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblNomUsu = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pwdNewClv = new javax.swing.JPasswordField();
        pwdConClv = new javax.swing.JPasswordField();
        butAce2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        pwdantClv = new javax.swing.JPasswordField();
        PanGen1 = new javax.swing.JPanel();
        pwdNewClv1 = new javax.swing.JPasswordField();
        pwdConClv1 = new javax.swing.JPasswordField();
        butAce3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        pwdantClv2 = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PanGen2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        pwdNewClv2 = new javax.swing.JPasswordField();
        pwdConClv2 = new javax.swing.JPasswordField();
        butAce4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        pwdantClv3 = new javax.swing.JPasswordField();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        butCer = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        PanTit.setPreferredSize(new java.awt.Dimension(10, 25));
        jLabel1.setText("Cambio de Contrase\u00f1a.");
        PanTit.add(jLabel1);

        getContentPane().add(PanTit, java.awt.BorderLayout.NORTH);

        PanCen.setLayout(new java.awt.BorderLayout());

        PanGen.setLayout(null);

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel2.setText("Nombre de Usuario:");
        PanGen.add(jLabel2);
        jLabel2.setBounds(56, 76, 128, 15);

        lblNomUsu.setBackground(new java.awt.Color(255, 255, 255));
        lblNomUsu.setText("xxx");
        lblNomUsu.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        lblNomUsu.setOpaque(true);
        PanGen.add(lblNomUsu);
        lblNomUsu.setBounds(228, 68, 160, 20);

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel3.setText("Nueva Contrase\u00f1a:");
        PanGen.add(jLabel3);
        jLabel3.setBounds(56, 128, 120, 15);

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel4.setText("Confirmar nueva contrase\u00f1a:");
        PanGen.add(jLabel4);
        jLabel4.setBounds(56, 156, 160, 15);

        PanGen.add(pwdNewClv);
        pwdNewClv.setBounds(228, 124, 160, 20);

        pwdConClv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdConClvActionPerformed(evt);
            }
        });

        PanGen.add(pwdConClv);
        pwdConClv.setBounds(228, 152, 160, 20);

        butAce2.setText("Aceptar");
        butAce2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAce2ActionPerformed(evt);
            }
        });

        PanGen.add(butAce2);
        butAce2.setBounds(280, 208, 92, 25);

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel5.setText("Contrase\u00f1a Anterior:");
        PanGen.add(jLabel5);
        jLabel5.setBounds(56, 100, 120, 15);

        PanGen.add(pwdantClv);
        pwdantClv.setBounds(228, 96, 160, 20);

        Tabgen.addTab("Contrase\u00f1a Usuario", PanGen);

        PanGen1.setLayout(null);

        PanGen1.add(pwdNewClv1);
        pwdNewClv1.setBounds(224, 112, 160, 20);

        PanGen1.add(pwdConClv1);
        pwdConClv1.setBounds(224, 144, 160, 20);

        butAce3.setText("Aceptar");
        butAce3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAce3ActionPerformed(evt);
            }
        });

        PanGen1.add(butAce3);
        butAce3.setBounds(276, 216, 96, 25);

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel10.setText("Contrase\u00f1a Anterior:");
        PanGen1.add(jLabel10);
        jLabel10.setBounds(56, 88, 120, 15);

        PanGen1.add(pwdantClv2);
        pwdantClv2.setBounds(224, 84, 160, 20);

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel11.setText("Nueva Contrase\u00f1a:");
        PanGen1.add(jLabel11);
        jLabel11.setBounds(56, 116, 120, 15);

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel12.setText("Confirmar nueva contrase\u00f1a:");
        PanGen1.add(jLabel12);
        jLabel12.setBounds(56, 144, 160, 15);

        Tabgen.addTab("Contrase\u00f1a de Autorizacion", PanGen1);

        PanGen2.setLayout(null);

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel8.setText("Nueva Contrase\u00f1a:");
        PanGen2.add(jLabel8);
        jLabel8.setBounds(64, 116, 120, 15);

        PanGen2.add(pwdNewClv2);
        pwdNewClv2.setBounds(224, 112, 160, 20);

        PanGen2.add(pwdConClv2);
        pwdConClv2.setBounds(224, 144, 160, 20);

        butAce4.setText("Aceptar");
        butAce4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAce4ActionPerformed(evt);
            }
        });

        PanGen2.add(butAce4);
        butAce4.setBounds(280, 200, 96, 25);

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel13.setText("Contrase\u00f1a Anterior:");
        PanGen2.add(jLabel13);
        jLabel13.setBounds(64, 88, 120, 15);

        PanGen2.add(pwdantClv3);
        pwdantClv3.setBounds(224, 84, 160, 20);

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 11));
        jLabel15.setText("Confirmar nueva contrase\u00f1a:");
        PanGen2.add(jLabel15);
        jLabel15.setBounds(64, 144, 160, 15);

        Tabgen.addTab("Contrase\u00f1a de Autorizacion", PanGen2);

        PanCen.add(Tabgen, java.awt.BorderLayout.CENTER);

        getContentPane().add(PanCen, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        butCer.setText("Cerrar");
        butCer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCerActionPerformed(evt);
            }
        });

        jPanel2.add(butCer);

        jPanel1.add(jPanel2, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-700)/2, (screenSize.height-450)/2, 700, 450);
    }//GEN-END:initComponents

    private void pwdConClvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdConClvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdConClvActionPerformed

    private void butAce4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAce4ActionPerformed
        // TODO add your handling code here:
        
         try
        {  
            if (!pwdConClv2.getText().equals("") && !pwdNewClv2.getText().equals(""))
            {
                if (pwdNewClv2.getText().compareTo(pwdConClv2.getText())==0)
                {  
                    con = DriverManager.getConnection(objZafParSis.getStringConexion(), objZafParSis.getUsuarioBaseDatos(), objZafParSis.getClaveBaseDatos());
                    if (con!=null)
                    {  
                        stm = con.createStatement();
                       if(VerifiClaveAnterior(con, "tx_pwd2", pwdantClv3.getText()) ) 
                      {  
                        strSQL = "Update tbm_usr set tx_pwd2 = MD5('"+pwdNewClv2.getText()+"') where co_usr = " + objZafParSis.getCodigoUsuario();
                        stm.executeUpdate(strSQL);
                        MensajeConfirma("Sistema Zafiro.- Cambio Contraseña","Se realizo el cambio satisfactoriamente.");
                        pwdNewClv2.setText("");
                        pwdConClv2.setText("");
                        pwdantClv3.setText("");
                       }
                      else{ 
                           pwdantClv3.selectAll();
                           pwdantClv3.requestFocus();   
                    }}
                }else
                    MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña incorrecto");
            }else
                MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña en blanco");
        }catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
        }
        
    }//GEN-LAST:event_butAce4ActionPerformed

    private void butAce3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAce3ActionPerformed
        // TODO add your handling code here:
        
         try
        {  
            if (!pwdConClv1.getText().equals("") && !pwdNewClv1.getText().equals(""))
            {
                if (pwdNewClv1.getText().compareTo(pwdConClv1.getText())==0)
                {  
                    con = DriverManager.getConnection(objZafParSis.getStringConexion(), objZafParSis.getUsuarioBaseDatos(), objZafParSis.getClaveBaseDatos());
                    if (con!=null)
                    {   
                        stm = con.createStatement();
                       if(VerifiClaveAnterior(con, "tx_pwd1", pwdantClv2.getText()) ) 
                      {
                        strSQL = "Update tbm_usr set tx_pwd1 = MD5('"+pwdNewClv1.getText()+"') where co_usr = " + objZafParSis.getCodigoUsuario();
                        stm.executeUpdate(strSQL);
                        MensajeConfirma("Sistema Zafiro.- Cambio Contraseña","Se realizo el cambio satisfactoriamente.");
                        pwdNewClv1.setText("");
                        pwdConClv1.setText("");
                        pwdantClv2.setText("");
                        }
                      else{
                           pwdantClv2.selectAll();
                           pwdantClv2.requestFocus();
                    } }
                }else
                    MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña incorrecto");
            }else
                MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña en blanco");
        }catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
        }
        
    }//GEN-LAST:event_butAce3ActionPerformed

    
    /**
     * Esta función muestra un mensaje informativo al usuario. Se podría utilizar
     * para mostrar al usuario un mensaje que indique el campo que es invalido y que
     * debe llenar o corregir.
     */
    private void mostrarMsgInf(String strMsg)
    {
        javax.swing.JOptionPane oppMsg=new javax.swing.JOptionPane();
        String strTit;
        strTit="Mensaje del sistema Zafiro";
        oppMsg.showMessageDialog(this,strMsg,strTit,javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }
    
    
    private boolean isCamVal()
    {
        String strClaAct, strClaNue, strClaCon;
        strClaAct=String.copyValueOf(pwdantClv.getPassword());
        strClaNue=String.copyValueOf(pwdNewClv.getPassword());
        strClaCon=String.copyValueOf(pwdConClv.getPassword());
                
                
        //Validar que el campo "Contraseña actual" no esté vacío.
        if (strClaAct.equals(""))
        {
            mostrarMsgInf("<HTML>El campo <FONT COLOR=\"blue\">Contraseña actual</FONT> no puede quedar vacío.<BR>Ingrese una contraseña valida y vuelva a intentarlo.</HTML>");
            pwdantClv.requestFocus();
            return false;
        }
       
        //Validar que el campo "Nueva contraseña" no esté vacío.
        if (strClaNue.equals(""))
        {
            mostrarMsgInf("<HTML>El campo <FONT COLOR=\"blue\">Nueva contraseña</FONT> no puede quedar vacío.<BR>Ingrese una contraseña valida y vuelva a intentarlo.</HTML>");
            pwdNewClv.requestFocus();
            return false;
        }
        //Validar que el campo "Nueva contraseña" tenga al menos 4 caracteres.
        if (strClaNue.length()<4)
        {
            mostrarMsgInf("<HTML>Su nueva contraseña debe tener al menos 4 caracteres.<BR>Ingrese una contraseña que tenga al menos 4 caracteres y vuelva a intentarlo.</HTML>");
            pwdNewClv.selectAll();
            pwdNewClv.requestFocus();
            return false;
        }
        //Validar que el campo "Confirmar nueva contraseña" sea igual al campo "Nueva contraseña".
        if (!strClaCon.equals(strClaNue))
        {
            mostrarMsgInf("<HTML>La confirmación de la nueva contraseña no coincide con la nueva contraseña.<BR>Ingrese la misma contraseña que ingresó en el campo <FONT COLOR=\"blue\">Nueva contraseña</FONT> y vuelva a intentarlo.</HTML>");
            pwdConClv.selectAll();
            pwdConClv.requestFocus();
            return false;
        }
        //Validar que el campo "Nueva contraseña" sea diferente a la contraseña vigente.
        if (strClaNue.equals(strClaAct))
        {
            mostrarMsgInf("<HTML>La nueva contraseña debe ser diferente a la contraseña vigente.<BR>Ingrese una contraseña diferente a la contraseña vigente y vuelva a intentarlo.</HTML>");
            pwdConClv.setText("");
            pwdNewClv.setText("");
            pwdNewClv.requestFocus();
            return false;
        }
        return true;
    }

    
    
    private void butAce2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAce2ActionPerformed
        // TODO add your handling code here:
        try
        {
            
          if (isCamVal()){ 
            
            if (!pwdConClv.getText().equals("") && !pwdNewClv.getText().equals(""))
            {
                if (pwdNewClv.getText().compareTo(pwdConClv.getText())==0)
                {
                    con = DriverManager.getConnection(objZafParSis.getStringConexion(), objZafParSis.getUsuarioBaseDatos(), objZafParSis.getClaveBaseDatos());
                    if (con!=null)
                    {
                        stm = con.createStatement();
                      if(VerifiClaveAnterior(con, "tx_pwd", pwdantClv.getText()) ) 
                      {
                        intDiaProActCla=getObtenerDiaValPws(con);
                        java.util.Calendar calFecProActCla=java.util.Calendar.getInstance();
                        calFecProActCla.setTime(objZafParSis.getFechaHoraServidorIngresarSistema());
                        calFecProActCla.add(java.util.Calendar.DATE, intDiaProActCla);
                
                        strSQL = "Update tbm_usr set tx_pwd =MD5("+objUti.codificar(String.copyValueOf(pwdNewClv.getPassword()))+")"+
                        ", fe_proActCla='" + objUti.formatearFecha(calFecProActCla.getTime(), objZafParSis.getFormatoFechaBaseDatos()) + "' "+
                        ", tx_comUltActCla='" + objZafParSis.getNombreComputadoraConDirIP() + "'" +
                        " WHERE co_usr = " + objZafParSis.getCodigoUsuario();
                        
                        stm.executeUpdate(strSQL);
                        MensajeConfirma("Sistema Zafiro.- Cambio Contraseña","Se realizo el cambio satisfactoriamente.");
                        pwdNewClv.setText("");
                        pwdConClv.setText("");
                        pwdantClv.setText(""); 
                     }
                      else{
                           pwdantClv.selectAll();
                           pwdantClv.requestFocus();
                       }
                    }
                }else {
                    MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña incorrecto");
                    pwdNewClv.selectAll();
                    pwdNewClv.requestFocus(); 
                }
            }else
                MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña en blanco");
            
          } 
        }catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
        }
        
    }//GEN-LAST:event_butAce2ActionPerformed
 
    
    private int getObtenerDiaValPws(java.sql.Connection con){
        ResultSet rstCab;
        Statement stmCab;
        int intDia=0;
        try
        {
            stmCab = con.createStatement();
            strSQL = "SELECT ne_diaProActCla FROM tbm_usr WHERE  co_usr="+objZafParSis.getCodigoUsuario()+" "+
            " AND st_usrSis='S' AND st_reg='A'";
            rstCab=stmCab.executeQuery(strSQL);
            if(rstCab.next())
                intDia=rstCab.getInt("ne_diaProActCla"); 
             rstCab.close();
             stmCab.close();
             rstCab=null;
            stmCab=null;
          }catch(Exception e){ intDia=0;  objUti.mostrarMsgErr_F1(this, e); }
       return intDia;
    }
    
    
    private boolean VerifiClaveAnterior(java.sql.Connection con, String clave, String claveAnt){
        ResultSet rstCab;
        Statement stmCab;
        boolean blnres=true;
        try
        {
            stmCab = con.createStatement();
            
                strSQL = "SELECT * FROM tbm_usr WHERE  "+clave+"=MD5('"+claveAnt.trim()+"') and co_usr="+objZafParSis.getCodigoUsuario();
                rstCab=stmCab.executeQuery(strSQL);
                if(rstCab.next()){
                    
                }else {
                      blnres=false; 
                      MensajeConfirma("Sistema Zafiro.- Cambio Contraseña" ,"La contraseña anterior no es correcta verifique y vuelva a intentarlo.");
                     }
               rstCab.close();
               stmCab.close();
               rstCab=null;
               stmCab=null;
          }catch(Exception e){ blnres=false;
            objUti.mostrarMsgErr_F1(this, e);
          }
       return blnres;
    }
    
    
    
    private void butCerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCerActionPerformed
        // TODO add your handling code here:
        String strMsg = "¿Está Seguro que desea cerrar este programa?";
        javax.swing.JOptionPane oppMsg=new javax.swing.JOptionPane();
        String strTit;
        strTit="Mensaje del sistema Zafiro";
        if(oppMsg.showConfirmDialog(this,strMsg,strTit,javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE) == 0 )
        {   
           exitForm();
        }
    }//GEN-LAST:event_butCerActionPerformed

    
    private boolean validarPass(){
        boolean blnres=false;
        if (!pwdConClv.getText().equals("") && !pwdNewClv.getText().equals(""))
            {
                if (pwdNewClv.getText().compareTo(pwdConClv.getText())==0)
                {
                   blnres=true;
                }else {  
                      MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña incorrecto"); 
                     return blnres=false;
                    }
            }else{ 
                MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña en blanco"); 
               return blnres=false;
              }
        
        
      
                if (pwdNewClv1.getText().compareTo(pwdConClv1.getText())==0)
                {
                   blnres=true;
                }else {   Tabgen.setSelectedIndex(1);    
                  MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña incorrecto"); return blnres=false; }
          
        
        
         
                if (pwdNewClv2.getText().compareTo(pwdConClv2.getText())==0)
                {
                   blnres=true;
                }else { Tabgen.setSelectedIndex(2);    
                  MensajeError("Sistema Zafiro.- Cambio Contraseña","Ingreso contraseña incorrecto"); return blnres=false; }
           
        
        return blnres;
    }
    
    
    
      private void MensajeError(String strTit,String strMsg){
        javax.swing.JOptionPane objMsgErr=new javax.swing.JOptionPane();
        objMsgErr.showMessageDialog(new javax.swing.JInternalFrame(),strMsg,strTit, javax.swing.JOptionPane.ERROR_MESSAGE);        
    }
       private void MensajeConfirma(String strTit,String strMsg){
        javax.swing.JOptionPane objMsgErr=new javax.swing.JOptionPane();
        objMsgErr.showMessageDialog(new javax.swing.JInternalFrame(),strMsg,strTit, javax.swing.JOptionPane.INFORMATION_MESSAGE);        
    }
         
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        String strMsg = "¿Está Seguro que desea cerrar este programa?";
        javax.swing.JOptionPane oppMsg=new javax.swing.JOptionPane();
        String strTit;
        strTit="Mensaje del sistema Zafiro";
        if(oppMsg.showConfirmDialog(this,strMsg,strTit,javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE) == 0 )
        {   
           exitForm();  
        }  
    }//GEN-LAST:event_formInternalFrameClosing
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanCen;
    private javax.swing.JPanel PanGen;
    private javax.swing.JPanel PanGen1;
    private javax.swing.JPanel PanGen2;
    private javax.swing.JPanel PanTit;
    private javax.swing.JTabbedPane Tabgen;
    private javax.swing.JButton butAce2;
    private javax.swing.JButton butAce3;
    private javax.swing.JButton butAce4;
    private javax.swing.JButton butCer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblNomUsu;
    private javax.swing.JPasswordField pwdConClv;
    private javax.swing.JPasswordField pwdConClv1;
    private javax.swing.JPasswordField pwdConClv2;
    private javax.swing.JPasswordField pwdNewClv;
    private javax.swing.JPasswordField pwdNewClv1;
    private javax.swing.JPasswordField pwdNewClv2;
    private javax.swing.JPasswordField pwdantClv;
    private javax.swing.JPasswordField pwdantClv2;
    private javax.swing.JPasswordField pwdantClv3;
    // End of variables declaration//GEN-END:variables
    
}
