/*
 * ZafMae26.java
 *
 * Created on 26 de enero de 2007, 11:58 AM
 */
  
package Maestros.ZafMae26;

import java.lang.*;

import Librerias.ZafUtil.ZafUtil;
import java.sql.*;
import java.util.ArrayList;  
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.io.*;

/**
 *
 * @author  Administrator
 */
public class ZafMae26 extends javax.swing.JInternalFrame {
    Librerias.ZafParSis.ZafParSis objZafParSis;
    ZafUtil objUti;
    Connection CONN_LOCAL=null, CONN_REMOTA=null, CONN_ORIGEN=null;
    
     String str_conloc="";
     String str_user="";
     String str_clacon="";
     private ZafThreadExe objThrExe;
      private ZafThreadGUI objThrGUI;
     
     
    private ArrayList arlDat, arlReg;
    private int INT_CO_REG=0;
    private int INT_CO_REGORG=1;
    private int INT_CO_REGDES=2;
    private int INT_TX_FREAC=3;
    private int INT_ST_REG=4;
    
    ResultSetMetaData rmd;
    private Vector vecDatOrg, vecCabOrg, vecRegOrg;
    private DefaultTableModel dtm;
    
    FileWriter fw;
    BufferedWriter bw; 
    PrintWriter salida;
    
    
    private boolean enEjecucion = false;

    private java.util.Date inicio,parada;

    /** Creates new form ZafMae26 */
    public ZafMae26(Librerias.ZafParSis.ZafParSis obj) {
    try{  
        this.objZafParSis = (Librerias.ZafParSis.ZafParSis) obj.clone();
        objUti = new ZafUtil();
        initComponents();
        Configuracion_Form();
        
        str_conloc = objZafParSis.getStringConexionCentral();
        str_user = objZafParSis.getUsuarioConexionCentral();
        str_clacon = objZafParSis.getClaveConexionCentral();
        
         }catch (CloneNotSupportedException e){
          objUti.mostrarMsgErr_F1(this, e);
      } 
    
    }
    
    
    private void Configuracion_Form(){
        arlDat=new ArrayList();
        vecDatOrg=new Vector();    //Almacena los datos
        vecCabOrg=new Vector();    //Almacena las cabeceras
        dtm=new DefaultTableModel();
        tblDatOrg = new javax.swing.JTable();
        tblDatOrg.setModel(dtm);
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ButEje = new javax.swing.JButton();
        ButCen = new javax.swing.JButton();
        lblCodAltDes1 = new javax.swing.JLabel();
        txtFecHorEje = new javax.swing.JTextField();
        butEje = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();

        getContentPane().setLayout(null);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        ButEje.setText("Ejecutar Traer de Local a Central");
        ButEje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButEjeActionPerformed(evt);
            }
        });

        getContentPane().add(ButEje);
        ButEje.setBounds(70, 80, 230, 25);

        ButCen.setText("Ejecutar  Llevar de Central a Local");
        ButCen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButCenActionPerformed(evt);
            }
        });

        getContentPane().add(ButCen);
        ButCen.setBounds(70, 120, 230, 25);

        lblCodAltDes1.setText("Fecha y hora:");
        getContentPane().add(lblCodAltDes1);
        lblCodAltDes1.setBounds(12, 20, 100, 20);

        txtFecHorEje.setText("2006/10/12 17:18:25");
        getContentPane().add(txtFecHorEje);
        txtFecHorEje.setBounds(120, 20, 204, 20);

        butEje.setText("Programar");
        butEje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEjeActionPerformed(evt);
            }
        });

        getContentPane().add(butEje);
        butEje.setBounds(328, 20, 156, 25);

        jButton2.setText("Actualiza Inventario");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(350, 80, 150, 25);

        jScrollPane1.setViewportView(txt);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 170, 450, 220);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-512)/2, (screenSize.height-442)/2, 512, 442);
    }//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         Maestros.ZafMae25.ZafMae25 obj1 = new  Maestros.ZafMae25.ZafMae25(objZafParSis);
     this.getParent().add(obj1,javax.swing.JLayeredPane.DEFAULT_LAYER);
     obj1.show();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void butEjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEjeActionPerformed
        // TODO add your handling code here:
       
        
        if(CambiarEstadoaPendiente()){
            objThrExe=new ZafThreadExe();
            objThrExe.start();
           
        }
       
        
    }//GEN-LAST:event_butEjeActionPerformed

    
    
     private boolean CambiarEstadoaPendiente(){
       boolean blnRes=false;
        try
        {
          Abrir_Conexion1(str_conloc, str_user , str_clacon );
           
          Statement stm=CONN_LOCAL.createStatement();
          String sql = "UPDATE tbm_cfgBasDatRep SET st_reg='P' WHERE co_grp in(1,3)";
          stm.executeUpdate(sql);
          CONN_LOCAL.commit();
          stm.close();
          stm=null;
          Cerrar_Conexion1();
          blnRes=true;
        }
        catch (java.sql.SQLException e) { objUti.mostrarMsgErr_F1(this, e); }
        catch (Exception e) { objUti.mostrarMsgErr_F1(this, e); }
        return blnRes;
    }
    
    
    
    
    
    
     private int calculaLapso(java.util.Date actual ) {
        java.util.Date dfinal;
        int  segundos = 0;
 
        dfinal = actual;
 
        
            
        segundos += ( dfinal.getHours() - inicio.getHours() ) * 3600;
        segundos += ( dfinal.getMinutes() - inicio.getMinutes() ) * 60;
        segundos += ( dfinal.getSeconds() - inicio.getSeconds() );
        return( segundos );
        }

    
    
    
    
     private void ButCenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButCenActionPerformed
        // TODO add your handling code here:
        
        
      EjedeCentralLocal();
        
     }//GEN-LAST:event_ButCenActionPerformed

    
    private boolean EjedeCentralLocal(){
       boolean blnRes=false;
        try
        {
          Abrir_Conexion1(str_conloc, str_user , str_clacon );
          Statement stm=CONN_LOCAL.createStatement();
          ResultSet rst;
          String sql = "SELECT * FROM tbm_cfgBasDatRep where co_grp=3 and st_reg='P'";
          rst=stm.executeQuery(sql);
          arlDat.clear();  
          while(rst.next()){
              arlReg=new ArrayList();
              arlReg.add(INT_CO_REG, rst.getString("co_reg"));
              arlReg.add(INT_CO_REGORG,  rst.getString("co_regdes"));
              arlReg.add(INT_CO_REGDES,  rst.getString("co_regorg")); 
              arlReg.add(INT_TX_FREAC,  rst.getString("tx_freact"));  
              arlReg.add(INT_ST_REG,  rst.getString("st_reg")); 
              arlDat.add(arlReg); 
          }
          leer();
          CONN_LOCAL.commit();
          stm.close();
          stm=null;
          rst.close();
          rst=null;
          Cerrar_Conexion1();
          blnRes=true;
        }
        catch (java.sql.SQLException e) { objUti.mostrarMsgErr_F1(this, e); }
        catch (Exception e) { objUti.mostrarMsgErr_F1(this, e); }
        
        return blnRes;
    }
    
    
                                                                                 
     private boolean ExtraerDatosRemotoInsertados(java.sql.Connection conn_remota, java.sql.Connection conn_origen, int intEmporg, int intEmpdes){
      boolean blnres=false;
      int intNumCam=0;
      int i, j;
       try
        {
            Statement stm_rem = conn_remota.createStatement();
            Statement stm_org = conn_origen.createStatement();
            ResultSet rst2;
            
            
              Statement stm=CONN_LOCAL.createStatement();
              ResultSet rst;
              String sql = "SELECT * FROM tbm_cfgtblrep where st_reg='A'  order by ne_ordrep";
              rst=stm.executeQuery(sql);
             
              txt.setText("");
              
              while(rst.next()){
                  
                   vecCabOrg.clear();
                   vecDatOrg.clear();
                   sql = "SELECT * FROM "+rst.getString("tx_nom")+" WHERE co_emp="+intEmpdes+" and st_regrep='I'";
                   
                   
                   rst2=stm_rem.executeQuery(sql);
                   rmd=rst2.getMetaData();
                   intNumCam=rmd.getColumnCount();
                   
                    
                    for(j=1;j<=intNumCam;j++)
                        vecCabOrg.add(rmd.getColumnName(j));
                    while (rst2.next())
                    { 
                        vecRegOrg=new Vector();
                        for(j=1;j<=intNumCam;j++)
                            vecRegOrg.add(rst2.getString(j));
                        vecDatOrg.add(vecRegOrg);
                    }
                    rst2.close();
                    rst2=null;
                    dtm.setDataVector(vecDatOrg, vecCabOrg);
                    tblDatOrg.setModel(dtm); 
                    
                    
                    sql = "UPDATE "+rst.getString("tx_nom")+" SET st_regrep='P' WHERE co_emp="+intEmpdes+" and st_regrep='I'";
                    stm_rem.executeUpdate(sql);
                    
   
    if(rst.getString("tx_nom").trim().equals("tbm_cli") ||  rst.getString("tx_nom").trim().equals("tbm_benchq") ||  rst.getString("tx_nom").trim().equals("tbm_placta")   ) {
                      
 //  *************************************************************************************************************
 //  *************************************************************************************************************
                        
                    
                    Object objAux;
                    String strAux,strsql2;
                   int intNumReg=dtm.getRowCount();
                    String strSQL="";
                    strSQL+="INSERT INTO " + rst.getString("tx_nom").trim() + " (";
                    for (j=0;j<intNumCam; j++)
                        strSQL+=dtm.getColumnName(j) + ((j+1<intNumCam)?", ":") VALUES (");
                    for (j=0;j<intNumCam; j++)
                        strSQL+=((j+1<intNumCam)?"?, ":"?)");
                    java.sql.PreparedStatement pst = conn_origen.prepareStatement(strSQL);
                    for (i=0;i<intNumReg;i++)
                    {
                        for (j=0;j<intNumCam;j++)
                        {
                            objAux=dtm.getValueAt(i, j);
                            if (objAux==null)
                                pst.setNull(j+1, java.sql.Types.NULL);
                            else
                            {
                                strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )
                                    pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                    pst.setDouble(j+1, Double.parseDouble(objAux.toString()));
                                else
                                    pst.setString(j+1, objAux.toString());
                            }
                        }
                       
                        //pst.executeUpdate();
                       strsql2=pst.toString() +";";
                      // System.out.println("> "+ strsql2  );
                       //salida.println( strsql2 );
                       txt.append(strsql2+"\n");
                    }
  
 
       //****************************************************************************************************
                  String strSQL2="", strSQLCon="",strAux2="",strAnd="";
                  
                   strSQL="UPDATE "+rst.getString("tx_nom").trim()+" SET  st_regrep='P' ";

                     j=0;  
                    i=0;
                  
                    strSQL2=strSQL;
                   
                    for (i=0;i<intNumReg;i++)
                    {   strSQL=strSQL2;
                        strSQLCon="WHERE";
                        for (j=0;j<intNumCam;j++)
                        {
                              
                          
                            objAux=dtm.getValueAt(i, j);
                            if (objAux!=null) {
                                
                               
                                strAux2=dtm.getColumnName(j);
                                strAux=dtm.getColumnName(j).substring(0,2);
                               
                              
                                if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_cli"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_reg"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_cta"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }       
                              
                                   
                            }
                            
                        }
                         strSQL+=strSQLCon;
                         //System.out.println("Cambia estado >>>  "+ strSQL );   
                         
                         strsql2=strSQL +";";
                         //System.out.println("> "+ strsql2  );
                        // salida.println( strsql2 );
                         txt.append(strsql2+"\n");
                        //stm_org.executeUpdate(strSQL);
                    } 
                   
      //******************************************************************************************************    
   
 //  *************************************************************************************************************
 //  *************************************************************************************************************
    }    else {
        
        
         
         //  *************************************************************************************************************
 //  *************************************************************************************************************
                        
                    
                    Object objAux;
                    String strAux, strsql2="";
                   int intNumReg=dtm.getRowCount();
                    String strSQL="";
                    strSQL+="INSERT INTO " + rst.getString("tx_nom").trim() + " (";
                    for (j=0;j<intNumCam; j++)
                        strSQL+=dtm.getColumnName(j) + ((j+1<intNumCam)?", ":") VALUES (");
                    for (j=0;j<intNumCam; j++)
                        strSQL+=((j+1<intNumCam)?"?, ":"?)");
                    java.sql.PreparedStatement pst = conn_origen.prepareStatement(strSQL);
                    for (i=0;i<intNumReg;i++)
                    {
                        for (j=0;j<intNumCam;j++)
                        {
                            objAux=dtm.getValueAt(i, j);
                            if (objAux==null)
                                pst.setNull(j+1, java.sql.Types.NULL);
                            else
                            {
                                strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )
                                    pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                    pst.setDouble(j+1, Double.parseDouble(objAux.toString()));
                                else
                                    pst.setString(j+1, objAux.toString());
                            }
                        }
                       
                        
                       strsql2=pst.toString() +";";
                       //System.out.println("11> "+ strsql2  );
                       //salida.println( strsql2 );
                       txt.append(strsql2+"\n");
                       //pst.executeUpdate();
                    }
  
 
       //****************************************************************************************************
                  String strSQL2="", strSQLCon="",strAux2="",strAnd="";
                  
                   strSQL="UPDATE "+rst.getString("tx_nom").trim()+" SET  st_regrep='P' ";

                    j=0;  
                    i=0;
                  
                    strSQL2=strSQL;
                   
                    for (i=0;i<intNumReg;i++)
                    {   strSQL=strSQL2;
                        strSQLCon="WHERE";
                        for (j=0;j<intNumCam;j++)
                        {
                              
                          
                            objAux=dtm.getValueAt(i, j);
                            if (objAux!=null) {
                                
                               
                                strAux2=dtm.getColumnName(j);
                                strAux=dtm.getColumnName(j).substring(0,2);
                               
                              
                                if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_tipdoc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_doc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_cot"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                } if (strAux2.equals("co_dia"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_reg"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }  
                                      
                              
                                   
                            }
                            
                        }
                         strSQL+=strSQLCon;
                         //System.out.println("Cambia estado >>>  "+ strSQL );   
                         strsql2=strSQL +";";
                         //System.out.println("> "+ strsql2  );
                         //salida.println( strsql2 );
                         txt.append(strsql2+"\n"); 
                        //stm_org.executeUpdate(strSQL);
                    } 
                   
      //******************************************************************************************************    
   
 //  *************************************************************************************************************
 //  *************************************************************************************************************
        
        
        
    }
                    
              }
              
              
              System.out.println(">> "+ txt.getText() );
               System.out.println("INSERTANDO..... ");
              stm_org.executeUpdate(txt.getText());
             

              
          stm_rem.close();
          stm_rem=null;
       
          blnres=true;
        }
        catch (java.sql.SQLException e) { System.out.println("Error "+e.toString() );  blnres=false; }
        catch (Exception e) { System.out.println("Error "+e.toString() );   blnres=false; }
      return blnres;
    }
    
    
     
     
     
    
     
     
     
     
     
     
     
                                                                                  
     private boolean ExtraerDatosRemotoModificar(java.sql.Connection conn_remota, java.sql.Connection conn_origen, int intEmporg, int intEmpdes){
      boolean blnres=false;
      int intNumCam=0;
      String strSQLCon,strAnd="";
      String strSQL2;
       
      int i, j;
       try
        {
           Statement stm_rem = conn_remota.createStatement();
           Statement stm_org = conn_origen.createStatement();
           ResultSet rst2;
          
              txt.setText("");
           
              Statement stm=CONN_LOCAL.createStatement();
              ResultSet rst;
              String sql = "SELECT * FROM tbm_cfgtblrep where st_reg='A'  order by ne_ordrep";
              rst=stm.executeQuery(sql);
              while(rst.next()){
                  
                   vecCabOrg.clear();
                   vecDatOrg.clear();
                   sql = "SELECT * FROM "+rst.getString("tx_nom")+" WHERE co_emp="+intEmpdes+" and st_regrep='M'";
                   
                   rst2=stm_rem.executeQuery(sql);
                   rmd=rst2.getMetaData();
                   intNumCam=rmd.getColumnCount();
                   
                    j=0;  
                    i=0;
                    for(j=1;j<=intNumCam;j++)
                        vecCabOrg.add(rmd.getColumnName(j));
                    while (rst2.next())
                    {  
                        vecRegOrg=new Vector();
                        for(j=1;j<=intNumCam;j++)
                            vecRegOrg.add(rst2.getString(j));
                        vecDatOrg.add(vecRegOrg);
                    }
                    rst2.close();
                    rst2=null;
                    dtm.setDataVector(vecDatOrg, vecCabOrg);
                    
                    sql = "UPDATE "+rst.getString("tx_nom")+" SET st_regrep='P' WHERE co_emp="+intEmpdes+" and st_regrep='M'";
                    stm_rem.executeUpdate(sql);
                    
                    
                    
     if(rst.getString("tx_nom").trim().equals("tbm_cli") ||  rst.getString("tx_nom").trim().equals("tbm_benchq") ||  rst.getString("tx_nom").trim().equals("tbm_placta") ) {
                      
 //  *************************************************************************************************************
 //  *************************************************************************************************************
                          
  //*****************************************************************************************************        
                    Object objAux;
                    String strAux, strAux2;
                    int intNumReg=dtm.getRowCount();
                    String strSQL="";
                   
                    String strNomTab = rst.getString("tx_nom").trim().substring(0,7);
                    strSQL="UPDATE "+rst.getString("tx_nom").trim()+" SET ";

                    j=0;  
                    i=0;
                  
                    strSQL2=strSQL;
                   
                    for (i=0;i<intNumReg;i++)
                    {   strSQL=strSQL2;
                        strSQLCon="WHERE";
                        for (j=0;j<intNumCam;j++)
                        {
                            objAux=dtm.getValueAt(i, j);
                            if (objAux==null) {
                                
                                 strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )  
                                   strSQL+=dtm.getColumnName(j) +"=null"+ ((j+1<intNumCam)?", ":" "); 
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                   strSQL+=dtm.getColumnName(j) +"=null"+ ((j+1<intNumCam)?", ":" ");  
                                else
                                   strSQL+=dtm.getColumnName(j) +"=null"+ ((j+1<intNumCam)?", ":" "); 
                              
                                
                            
                            }else
                            {
                                strAux2=dtm.getColumnName(j);
                                strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )  
                                   strSQL+=dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?", ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                   strSQL+=dtm.getColumnName(j) +"="+Double.parseDouble(objAux.toString())+ ((j+1<intNumCam)?", ":" ");  //  pst.setDouble(j+1, Double.parseDouble(objAux.toString()));
                                else
                                   strSQL+=dtm.getColumnName(j) +"='"+objAux.toString()+"'"+ ((j+1<intNumCam)?", ":" ");  //  pst.setString(j+1, objAux.toString());
                              
                              
                                if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_cli"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_reg"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_cta"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } 
                                      
                              
                                   
                            }
                            
                        }
                         strSQL+=strSQLCon+";";
                        // System.out.println(">>>  "+ strSQL );   
                         txt.append(strSQL+"\n");
                         //stm_org.executeUpdate(strSQL);
                    }
                   
 //*****************************************************************************************************        
          
                   
                   
                   
                   //****************************************************************************************************
                  strSQL2="";
                  strSQLCon="";
                  strAux2="";
                  strAnd="";
                  
                   strSQL="UPDATE "+rst.getString("tx_nom").trim()+" SET  st_regrep='P' ";

                     j=0;  
                    i=0;
                  
                    strSQL2=strSQL;
                   
                    for (i=0;i<intNumReg;i++)
                    {   strSQL=strSQL2;
                        strSQLCon="WHERE";
                        for (j=0;j<intNumCam;j++)
                        {
                              
                          
                            objAux=dtm.getValueAt(i, j);
                            if (objAux!=null) {
                                
                               
                                strAux2=dtm.getColumnName(j);
                                strAux=dtm.getColumnName(j).substring(0,2);
                               
                              
                                if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_cli"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_reg"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_cta"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } 
                                      
                                   
                            }
                            
                        }
                         strSQL+=strSQLCon+";";
                        // System.out.println("Cambia estado >>>  "+ strSQL );   
                          txt.append(strSQL+"\n");
                         //stm_org.executeUpdate(strSQL);
                    } 
                   
      //******************************************************************************************************    
                   
  //  *************************************************************************************************************
 //  *************************************************************************************************************
     } else {
         
         
     //*****************************************************************************************************        
                    Object objAux;
                    String strAux, strAux2;
                   int intNumReg=dtm.getRowCount();
                    String strSQL="";
                   
                   String strNomTab = rst.getString("tx_nom").trim().substring(0,7);
                   
                  if(strNomTab.equals("tbm_det") || strNomTab.equals("tbm_pag") ){
                        
                        
                        
                        
               //*******************************************************************************************   
                        j=0;  
                    i=0;
                      strSQL="DELETE FROM "+rst.getString("tx_nom").trim()+" ";
  
                      strSQL2=strSQL;                       
                    for (i=0;i<intNumReg;i++)
                    { 
                        strSQL=strSQL2;
                        strSQLCon="WHERE";
                        
                        for (j=0;j<intNumCam;j++)
                        {
                            objAux=dtm.getValueAt(i, j);
                            
                                 strAux2=dtm.getColumnName(j);
                                 strAux=dtm.getColumnName(j).substring(0,2);
                            
                                 if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_tipdoc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_doc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_cot"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_dia"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } 
                        }
                        strSQL+=strSQLCon+";";
                       // System.out.println(">>>  "+ strSQL );   
                        txt.append(strSQL+"\n");
                        //  stm_org.executeUpdate(strSQL);
                    }
                    
                    
                      
                       j=0;  
                    i=0;
                         strSQL="INSERT INTO " + rst.getString("tx_nom").trim() + " (";
                    for (j=0;j<intNumCam; j++)
                        strSQL+=dtm.getColumnName(j) + ((j+1<intNumCam)?", ":") VALUES (");
                    for (j=0;j<intNumCam; j++)
                        strSQL+=((j+1<intNumCam)?"?, ":"?)");
                    java.sql.PreparedStatement pst2 = conn_origen.prepareStatement(strSQL);
                    for (i=0;i<intNumReg;i++)
                    {
                        for (j=0;j<intNumCam;j++)
                        {
                            objAux=dtm.getValueAt(i, j);
                            if (objAux==null)
                                pst2.setNull(j+1, java.sql.Types.NULL);
                            else
                            {
                                strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )
                                    pst2.setInt(j+1, Integer.parseInt(objAux.toString()));
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                    pst2.setDouble(j+1, Double.parseDouble(objAux.toString()));
                                else
                                    pst2.setString(j+1, objAux.toString());
                            }
                        }
                        strSQL=pst2.toString()+";";
                        //System.out.println(">>>  "+ strSQL );   
                        txt.append(strSQL+"\n");
                        //pst2.executeUpdate();
                    }
               //*******************************************************************************************          
                        
                        
                    } else {
                    strSQL="UPDATE "+rst.getString("tx_nom").trim()+" SET ";

                     j=0;  
                    i=0;
                  
                    strSQL2=strSQL;
                   
                    for (i=0;i<intNumReg;i++)
                    {   strSQL=strSQL2;
                        strSQLCon="WHERE";
                        for (j=0;j<intNumCam;j++)
                        {
                              
                          
                            objAux=dtm.getValueAt(i, j);
                            if (objAux==null) {
                             
                                
                                 strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )  
                                   strSQL+=dtm.getColumnName(j) +"=null"+ ((j+1<intNumCam)?", ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                   strSQL+=dtm.getColumnName(j) +"=null"+ ((j+1<intNumCam)?", ":" ");  //  pst.setDouble(j+1, Double.parseDouble(objAux.toString()));
                                else
                                   strSQL+=dtm.getColumnName(j) +"=null"+ ((j+1<intNumCam)?", ":" ");  //  pst.setString(j+1, objAux.toString());
                              
                                
                            
                            }else
                            {
                                strAux2=dtm.getColumnName(j);
                                strAux=dtm.getColumnName(j).substring(0,2);
                                if ( strAux.equals("ne") || strAux.equals("co") )  
                                   strSQL+=dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?", ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                else if ( strAux.equals("nd") || strAux.equals("mo") )
                                   strSQL+=dtm.getColumnName(j) +"="+Double.parseDouble(objAux.toString())+ ((j+1<intNumCam)?", ":" ");  //  pst.setDouble(j+1, Double.parseDouble(objAux.toString()));
                                else
                                   strSQL+=dtm.getColumnName(j) +"='"+objAux.toString()+"'"+ ((j+1<intNumCam)?", ":" ");  //  pst.setString(j+1, objAux.toString());
                              
                              
                                if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_tipdoc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_doc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_cot"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                } if (strAux2.equals("co_dia"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } 
                                      
                              
                                   
                            }
                            
                        }
                         strSQL+=strSQLCon+";";
                         ///System.out.println(">>>  "+ strSQL );   
                          txt.append(strSQL+"\n");
                       // stm_org.executeUpdate(strSQL);
                    }
                    }
 //*****************************************************************************************************        
          
                   
                   
                   
                   //****************************************************************************************************
                  strSQL2="";
                  strSQLCon="";
                  strAux2="";
                  strAnd="";
                  
                   strSQL="UPDATE "+rst.getString("tx_nom").trim() +" SET  st_regrep='P' ";

                     j=0;  
                    i=0;
                  
                    strSQL2=strSQL;
                   
                    for (i=0;i<intNumReg;i++)
                    {   strSQL=strSQL2;
                        strSQLCon="WHERE";
                        for (j=0;j<intNumCam;j++)
                        {
                              
                          
                            objAux=dtm.getValueAt(i, j);
                            if (objAux!=null) {
                                
                               
                                strAux2=dtm.getColumnName(j);
                                strAux=dtm.getColumnName(j).substring(0,2);
                               
                              
                                if (strAux2.equals("co_emp"))  {
                                   if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                       strSQLCon += strAnd  + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                }if (strAux2.equals("co_loc")){  
                                    if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                      strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }if (strAux2.equals("co_tipdoc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND ";
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_doc"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 } if (strAux2.equals("co_cot"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                } if (strAux2.equals("co_dia"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?" ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                  } if (strAux2.equals("co_reg"))  {
                                      if(strSQLCon.equalsIgnoreCase("WHERE")) strAnd=" "; else strAnd=" AND "; 
                                     strSQLCon += strAnd + dtm.getColumnName(j) +"="+Integer.parseInt(objAux.toString())+ ((j+1<intNumCam)?"  ":" "); //  pst.setInt(j+1, Integer.parseInt(objAux.toString()));
                                 }  
                                      
                              
                                   
                            }
                            
                        }
                         strSQL+=strSQLCon+";";
                       //  System.out.println("Cambia estado >>>  "+ strSQL );   
                          txt.append(strSQL+"\n");
                        //stm_org.executeUpdate(strSQL);
                    } 
                   
      //******************************************************************************************************    
                   
  //  *************************************************************************************************************
 //  *************************************************************************************************************
     }    
         
         
         
         
     
                   
              }
              
              
               System.out.println("Estado M  >>> "+ txt.getText() );
                System.out.println("ACTUALIZANDO..... ");
              stm_org.executeUpdate(txt.getText());
              
          stm_rem.close();
          stm_rem=null;
       
         blnres=true;
        }
        catch (java.sql.SQLException e) { System.out.println("Error "+e.toString() );  blnres=false; }
        catch (Exception e) { System.out.println("Error "+e.toString() );   blnres=false; }
      return blnres;
    }
    
     
     
    private void ButEjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButEjeActionPerformed
        // TODO add your handling code here:
        EjecutarDeLocalCentral();
        
    }//GEN-LAST:event_ButEjeActionPerformed
    
    private boolean EjecutarDeLocalCentral(){
        boolean blnRes=false;

        
        
        try
        {
          Abrir_Conexion1(str_conloc, str_user , str_clacon );
          
            fw = new FileWriter("c:/archivoplano.txt");
            bw = new BufferedWriter(fw);
            salida = new PrintWriter(bw);
           
          Statement stm=CONN_LOCAL.createStatement();
          ResultSet rst;
          String sql = "SELECT * FROM tbm_cfgBasDatRep where co_grp=1 and st_reg='P'";
          rst=stm.executeQuery(sql);
          arlDat.clear();  
          while(rst.next()){
              arlReg=new ArrayList();
              arlReg.add(INT_CO_REG, rst.getString("co_reg"));
              arlReg.add(INT_CO_REGORG,  rst.getString("co_regorg"));
              arlReg.add(INT_CO_REGDES,  rst.getString("co_regdes")); 
              arlReg.add(INT_TX_FREAC,  rst.getString("tx_freact"));  
              arlReg.add(INT_ST_REG,  rst.getString("st_reg")); 
              arlDat.add(arlReg); 
          }
          leer();
          CONN_LOCAL.commit();
          stm.close();
          stm=null;
          rst.close();
          rst=null;
          Cerrar_Conexion1();
           salida.close();
          blnRes=true;
        }
        catch (java.sql.SQLException e) { objUti.mostrarMsgErr_F1(this, e); }
        catch (Exception e) { objUti.mostrarMsgErr_F1(this, e); }
        return blnRes;
    }
    
    
    
    private void leer(){
         int intcodreg=0; 
         int intregorg=0;
         int intregdes=0;
        try
        {
         for (int j=0;j<arlDat.size();j++){
              //System.out.println(" "+ objUti.getIntValueAt(arlDat,j, INT_CO_REGORG ));      
              intcodreg=objUti.getIntValueAt(arlDat,j, INT_CO_REG );
              intregorg=objUti.getIntValueAt(arlDat,j, INT_CO_REGORG );
              intregdes=objUti.getIntValueAt(arlDat,j, INT_CO_REGDES );
              if(Abrir_Conexion2( objZafParSis.getStringConexion(intregdes), objZafParSis.getUsuarioBaseDatos(intregdes), objZafParSis.getClaveBaseDatos(intregdes) )){
               if(Abrir_Conexion3( objZafParSis.getStringConexion(intregorg), objZafParSis.getUsuarioBaseDatos(intregorg), objZafParSis.getClaveBaseDatos(intregorg) ) ){
              
              int intCodEmpOrg = objZafParSis.getCodigoEmpresa(Byte.parseByte(""+intregorg));
              int intCodEmpDes = objZafParSis.getCodigoEmpresa(Byte.parseByte(""+intregdes));
              
              if(ExtraerDatosRemotoInsertados(CONN_REMOTA, CONN_ORIGEN, intCodEmpOrg, intCodEmpDes) ){
                if(ExtraerDatosRemotoModificar(CONN_REMOTA, CONN_ORIGEN, intCodEmpOrg, intCodEmpDes) ){   
                  CONN_REMOTA.commit();
                  CONN_ORIGEN.commit();
//                      CONN_REMOTA.rollback();
//                      CONN_ORIGEN.rollback();
                
                
                       Statement stm=CONN_LOCAL.createStatement();
                       String sql = "UPDATE tbm_cfgBasDatRep SET st_reg='A' WHERE  co_reg="+intcodreg;
                       stm.executeUpdate(sql);
                  
                  
                }
                 else {
                      CONN_REMOTA.rollback();
                      CONN_ORIGEN.rollback();
                 }
                }else {
                      CONN_REMOTA.rollback();
                      CONN_ORIGEN.rollback();
               }
            
             Cerrar_Conexion2();  
             Cerrar_Conexion3();  
             
           }}
         }
        }
        catch (java.sql.SQLException e) { System.out.println("Error "+e.toString() ); }
        catch (Exception e) { System.out.println("Error "+e.toString() ); }
    }
    
    
    
   
    
    
    
     public void Abrir_Conexion1(String str_strcon, String str_usrcon, String str_cla){
        try{
            //System.out.println("ABRIR CONEXION...."); 
            CONN_LOCAL=DriverManager.getConnection( str_strcon, str_usrcon, str_cla );          
            CONN_LOCAL.setAutoCommit(false);
           }
           catch(SQLException  Evt){   System.out.println("Error "+Evt.toString() ); }
       
    }
    
    
    
     public void Cerrar_Conexion1(){
        try{
           ///System.out.println("CERRANDO CONEXION....");
            CONN_LOCAL.close();
            CONN_LOCAL=null; 
        }
           catch(SQLException  Evt){   System.out.println("Error "+Evt.toString() ); }
    }
    
    
     
       public boolean Abrir_Conexion2(String str_strcon, String str_usrcon, String str_cla){
        boolean bln=false;
           try{
            //System.out.println("ABRIR CONEXION...."); 
            CONN_REMOTA=DriverManager.getConnection( str_strcon, str_usrcon, str_cla );          
            CONN_REMOTA.setAutoCommit(false);
            bln=true;
           }
           catch(SQLException  Evt){  System.out.println("Error "+Evt.toString() ); }
         return bln;
      }
    
    
    
     public void Cerrar_Conexion2(){
        try{
           ///System.out.println("CERRANDO CONEXION....");
            CONN_REMOTA.close();
            CONN_REMOTA=null; 
        }
           catch(SQLException  Evt){   System.out.println("Error "+Evt.toString() );  }
    }
    
     
     
     
       public boolean Abrir_Conexion3(String str_strcon, String str_usrcon, String str_cla){
        boolean bln=false; 
         try{
            //System.out.println("ABRIR CONEXION...."); 
            CONN_ORIGEN=DriverManager.getConnection( str_strcon, str_usrcon, str_cla );          
            CONN_ORIGEN.setAutoCommit(false);
            bln=true;
           }
           catch(SQLException  Evt){   System.out.println("Error "+Evt.toString() ); }
       return bln;
    }
    
    
    
     public void Cerrar_Conexion3(){
        try{
           ///System.out.println("CERRANDO CONEXION....");
            CONN_ORIGEN.close();
            CONN_ORIGEN=null; 
        }
           catch(SQLException  Evt){   System.out.println("Error "+Evt.toString() ); }
    }
    
     
     
     
     
     
     
     
     
      private class ZafThreadGUI extends Thread
    {
        private int intIndFun;
        
        public ZafThreadGUI()
        {
            intIndFun=0;
        }
        
        public void run()
        {
            
            if(EjecutarDeLocalCentral()) System.out.println(" PROCESO DE LOCAL A CENTRAL REALIZADA........");
            
            if(EjedeCentralLocal()) System.out.println(" PROCESO DE  CENTRAL A  LOCAL  REALIZADA........");
            
            
//            for(int i=0; i<20; i++){
//                System.out.println(" PROCESO DE  CENTRAL A  LOCAL  REALIZADA........");
//               
//                 try
//                    {
//                        sleep(1000);
//                    }
//                    catch (InterruptedException e)
//                    {
//                        System.out.println("Excepción: " + e.toString());
//                    }
//                
//            }
             
            objThrExe=new ZafThreadExe();
            objThrExe.start();
            
            objThrGUI=null;
        }
        
        /**
         * Esta función establece el indice de la función a ejecutar. En la clase Thread
         * se pueden ejecutar diferentes funciones. Esta función sirve para determinar
         * la función que debe ejecutar el Thread.
         * @param indice El indice de la función a ejecutar.
         */
        public void setIndFunEje(int indice)
        {
            intIndFun=indice;
        }
    }
     
      
      
      
      
     private int BuscarEstadoPendiente(){
       int intRes=0;
        try
        {
          Abrir_Conexion1(str_conloc, str_user , str_clacon );
           
          Statement stm=CONN_LOCAL.createStatement();
          ResultSet rst;
          String sql = "SELECT * FROM tbm_cfgBasDatRep where st_reg='P' and co_grp in(1,3)";
          rst=stm.executeQuery(sql);
          arlDat.clear();  
          if(rst.next())
              intRes=1;
             else  intRes=2;
          stm.close();
          stm=null;
          Cerrar_Conexion1();
        }
        catch (java.sql.SQLException e) { System.out.println("Error "+e.toString() ); }
        catch (Exception e) { System.out.println("Error "+e.toString() ); }
        return intRes;
    }
      
      
       private class ZafThreadExe extends Thread
    {
        java.util.Date datFecSis, datFecExe;
        
        public ZafThreadExe()
        {
            datFecExe=objUti.parseDate(txtFecHorEje.getText(), "yyyy/MM/dd HH:mm:ss");
        }
        
        public void run()
        {
            butEje.setEnabled(false);
            ButEje.setEnabled(false);
            ButCen.setEnabled(false); 
            
            if (!txtFecHorEje.getText().equals(""))
            {
                datFecExe=objUti.parseDate(txtFecHorEje.getText(), "yyyy/MM/dd HH:mm:ss");
                
                
                  java.util.Date datFecSis, datFecExe;
                  inicio=objUti.parseDate(txtFecHorEje.getText(), "yyyy/MM/dd HH:mm:ss");
                 
                  int segundos = 0;
                  int intVal=3;
                
                  System.out.println(" Ejecutandose.......");
                  
                while (true)
                {
                    datFecSis=new java.util.Date();
//                    System.out.println("datFecExe: " + datFecExe.toString());
//                    System.out.println("datFecSis: " + datFecSis.toString());
                    //if (datFecExe.before(datFecSis))
                    if(intVal==3)
                      segundos = calculaLapso( datFecSis );
                    
                    System.out.println(" Valor.."+ segundos);
                    
                    if(segundos>0)
                    {
                        
                        
                       intVal=BuscarEstadoPendiente();
                           System.out.println(" Ejecutandose......."+ intVal);
                        if(intVal==1){
                               
                                System.out.println("Ejecutado...");
                                objThrGUI=new ZafThreadGUI();
                                objThrGUI.setIndFunEje(1);
                                objThrGUI.start();
                                
                              
                                  stop(); 
                   
                               
                                
                           segundos=1;  
                        }
                       if(intVal==2)
                             break;
                       
                       //segundos=intVal;
                       
                    }
                    try
                    {
                        sleep(2000);
                    }
                    catch (InterruptedException e)
                    {
                        System.out.println("Excepción: " + e.toString());
                    }
                }
            }
            System.out.println(" OK................ ");
            butEje.setEnabled(true);
            ButEje.setEnabled(true);
            ButCen.setEnabled(true); 
        }

    }

     
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButCen;
    private javax.swing.JButton ButEje;
    private javax.swing.JButton butEje;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodAltDes1;
    private javax.swing.JTextArea txt;
    private javax.swing.JTextField txtFecHorEje;
    // End of variables declaration//GEN-END:variables
     private javax.swing.JTable tblDatOrg;
}
