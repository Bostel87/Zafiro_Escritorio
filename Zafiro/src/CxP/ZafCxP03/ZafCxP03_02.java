/*
 * ZafCxP03.java
 *
 * Created on 9 de marzo de 2006, 9:12
 *
 * v0.1 
 */
package CxP.ZafCxP03;

import Librerias.ZafParSis.ZafParSis;
import Librerias.ZafUtil.ZafUtil;
import Librerias.ZafColNumerada.ZafColNumerada;
import Librerias.ZafTblUti.ZafTblMod.ZafTblMod;
import Librerias.ZafTblUti.ZafTblEdi.ZafTblEdi;
import Librerias.ZafTblUti.ZafTblPopMnu.ZafTblPopMnu;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Vector;
import Librerias.ZafTblUti.ZafTblFilCab.ZafTblFilCab;
import Librerias.ZafUtil.ZafUtil;
import java.util.ArrayList;
/**
 *
 * @author  Ingrid
 */
public class ZafCxP03_02 extends javax.swing.JDialog {
    
    
    //Constantes: Columnas del JTable:    
    //Variable
    private ZafParSis objParSis;
    private ZafUtil objUti;
    private ZafTblMod objTblMod;
    
    final int INT_TBL_DAT_LIN=0;
    final int INT_TBL_DAT_COD_EMP=1;
    final int INT_TBL_DAT_COD_LOC=2;
    final int INT_TBL_DAT_COD_CLI=3;
    final int INT_TBL_DAT_NOM_CLI=4;
    final int INT_TBL_DAT_COD_TIP_DOC=5;
    final int INT_TBL_DAT_DES_COR=6;
    final int INT_TBL_DAT_DES_LAR=7;
    final int INT_TBL_DAT_COD_DOC=8;
    final int INT_TBL_DAT_COD_REG=9;
    final int INT_TBL_DAT_NUM_DOC=10;

    
    private Vector vecReg, vecDat, vecCab, vecAux;
    private ZafTblPopMnu objTblPopMnu;
    private ZafTblFilCab objTblFilCab;


    private ArrayList arlDatRegModTieEje;
    final int INT_TBL_ARL_COD_EMP=0;
    final int INT_TBL_ARL_COD_LOC=1;
    final int INT_TBL_ARL_COD_CLI=2;
    final int INT_TBL_ARL_NOM_CLI=3;
    final int INT_TBL_ARL_COD_TIP_DOC=4;
    final int INT_TBL_ARL_DES_COR=5;
    final int INT_TBL_ARL_DES_LAR=6;
    final int INT_TBL_ARL_COD_DOC=7;
    final int INT_TBL_ARL_COD_REG=8;
    final int INT_TBL_ARL_NUM_DOC=9;
    
    public ZafCxP03_02(java.awt.Frame parent, boolean modal, ZafParSis obj, ArrayList arregloDatSinGuardar) {
        super(parent, modal);
        try{
            initComponents();
              //Inicializar objetos.
            objParSis=(ZafParSis)obj.clone();
            arlDatRegModTieEje=new ArrayList();
            arlDatRegModTieEje=arregloDatSinGuardar;
            if(configurarFrm()){
                cargarDocumentosSinGuardar();
            }
        }
        catch (CloneNotSupportedException e){
            this.setTitle(this.getTitle() + " [ERROR]");
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanFrm = new javax.swing.JPanel();
        lblTit = new javax.swing.JLabel();
        panGen = new javax.swing.JPanel();
        panGenDet = new javax.swing.JPanel();
        spnDat = new javax.swing.JScrollPane();
        tblDat = new javax.swing.JTable();
        panBar = new javax.swing.JPanel();
        panBot = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        butCer = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        PanFrm.setLayout(new java.awt.BorderLayout());

        lblTit.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
        lblTit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTit.setText("Listado de documentos no guardados(Otro usuario realizó cambios mientras ud. los tenía en pantalla)");
        PanFrm.add(lblTit, java.awt.BorderLayout.NORTH);

        panGen.setLayout(new java.awt.BorderLayout());

        panGenDet.setLayout(new java.awt.BorderLayout());

        tblDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spnDat.setViewportView(tblDat);

        panGenDet.add(spnDat, java.awt.BorderLayout.CENTER);

        panGen.add(panGenDet, java.awt.BorderLayout.CENTER);

        PanFrm.add(panGen, java.awt.BorderLayout.CENTER);

        panBar.setLayout(new java.awt.BorderLayout());

        panBot.setLayout(new java.awt.BorderLayout());

        butCer.setText("Cerrar");
        butCer.setToolTipText("Si presiona cancelar se borrará lo que ha ingresado");
        butCer.setPreferredSize(new java.awt.Dimension(92, 25));
        butCer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCerActionPerformed(evt);
            }
        });
        jPanel1.add(butCer);

        panBot.add(jPanel1, java.awt.BorderLayout.EAST);

        jPanel2.setLayout(new java.awt.BorderLayout());
        panBot.add(jPanel2, java.awt.BorderLayout.WEST);

        panBar.add(panBot, java.awt.BorderLayout.CENTER);

        PanFrm.add(panBar, java.awt.BorderLayout.SOUTH);

        getContentPane().add(PanFrm, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-663)/2, (screenSize.height-430)/2, 663, 430);
    }// </editor-fold>//GEN-END:initComponents

    private void butCerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCerActionPerformed
        // TODO add your handling code here:
        dispose();
}//GEN-LAST:event_butCerActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanFrm;
    private javax.swing.JButton butCer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblTit;
    private javax.swing.JPanel panBar;
    private javax.swing.JPanel panBot;
    private javax.swing.JPanel panGen;
    private javax.swing.JPanel panGenDet;
    private javax.swing.JScrollPane spnDat;
    private javax.swing.JTable tblDat;
    // End of variables declaration//GEN-END:variables
       
    
    private boolean configurarFrm()
    {
        boolean blnRes=true;
        try
        {
            //Configurar JTable: Establecer el modelo.
            vecDat=new Vector();    //Almacena los datos
            vecCab=new Vector(11);  //Almacena las cabeceras
            vecCab.clear();
            vecCab.add(INT_TBL_DAT_LIN,"");
            vecCab.add(INT_TBL_DAT_COD_EMP,"Cód.Emp.");
            vecCab.add(INT_TBL_DAT_COD_LOC,"Cód.Loc.");
            vecCab.add(INT_TBL_DAT_COD_CLI,"Cód.Prv.");
            vecCab.add(INT_TBL_DAT_NOM_CLI,"Proveedor");
            vecCab.add(INT_TBL_DAT_COD_TIP_DOC,"Cód.Tip.Doc.");
            vecCab.add(INT_TBL_DAT_DES_COR,"Tip.Doc.");
            vecCab.add(INT_TBL_DAT_DES_LAR,"Tipo de documento");
            vecCab.add(INT_TBL_DAT_COD_DOC,"Cód.Doc.");
            vecCab.add(INT_TBL_DAT_COD_REG,"Cód.Reg.");
            vecCab.add(INT_TBL_DAT_NUM_DOC,"Núm.Doc.");

            objUti=new ZafUtil();
            
            objTblMod=new ZafTblMod();
            objTblMod.setHeader(vecCab);
            tblDat.setModel(objTblMod);
            //Configurar JTable: Establecer tipo de seleccián.
            tblDat.setRowSelectionAllowed(true);
            tblDat.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
            //Configurar JTable: Establecer el mená de contexto.
            objTblPopMnu=new ZafTblPopMnu(tblDat);
            //Configurar JTable: Establecer el tipo de redimensionamiento de las columnas.
            tblDat.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            //Configurar JTable: Establecer el ancho de las columnas.
            javax.swing.table.TableColumnModel tcmAux=tblDat.getColumnModel();
            tcmAux.getColumn(INT_TBL_DAT_LIN).setPreferredWidth(30);
            tcmAux.getColumn(INT_TBL_DAT_COD_EMP).setPreferredWidth(30);
            tcmAux.getColumn(INT_TBL_DAT_COD_LOC).setPreferredWidth(30);
            tcmAux.getColumn(INT_TBL_DAT_COD_CLI).setPreferredWidth(60);
            tcmAux.getColumn(INT_TBL_DAT_NOM_CLI).setPreferredWidth(170);
            tcmAux.getColumn(INT_TBL_DAT_COD_TIP_DOC).setPreferredWidth(30);
            tcmAux.getColumn(INT_TBL_DAT_DES_COR).setPreferredWidth(70);
            tcmAux.getColumn(INT_TBL_DAT_DES_LAR).setPreferredWidth(20);
            tcmAux.getColumn(INT_TBL_DAT_COD_DOC).setPreferredWidth(30);
            tcmAux.getColumn(INT_TBL_DAT_COD_REG).setPreferredWidth(30);
            tcmAux.getColumn(INT_TBL_DAT_NUM_DOC).setPreferredWidth(70);
            
            //Configurar JTable: Establecer el tipo de reordenamiento de columnas.
            tblDat.getTableHeader().setReorderingAllowed(false);

            //Configurar JTable: Ocultar columnas del sistema.
            objTblMod.addSystemHiddenColumn(INT_TBL_DAT_COD_EMP, tblDat);
            objTblMod.addSystemHiddenColumn(INT_TBL_DAT_COD_LOC, tblDat);
            objTblMod.addSystemHiddenColumn(INT_TBL_DAT_COD_TIP_DOC, tblDat);
            objTblMod.addSystemHiddenColumn(INT_TBL_DAT_COD_DOC, tblDat);
            objTblMod.addSystemHiddenColumn(INT_TBL_DAT_COD_REG, tblDat);

            
            //Configurar JTable: Establecer la fila de cabecera.
            objTblFilCab=new ZafTblFilCab(tblDat);
            tcmAux.getColumn(INT_TBL_DAT_LIN).setCellRenderer(objTblFilCab);
                       
            //Libero los objetos auxiliares.
            tcmAux=null;
        }
        catch(Exception e)
        {
            blnRes=false;
            objUti.mostrarMsgErr_F1(this, e);
        }
        return blnRes;
    }
    

    /**
     * Esta funcián muestra un mensaje informativo al usuario. Se podráa utilizar
     * para mostrar al usuario un mensaje que indique el campo que es invalido y que
     * debe llenar o corregir.
     */
    private void mostrarMsgInf(String strMsg){
        javax.swing.JOptionPane oppMsg=new javax.swing.JOptionPane();
        String strTit;
        strTit="Mensaje del sistema Zafiro";
        oppMsg.showMessageDialog(this,strMsg,strTit,javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }
    


    private boolean cargarDocumentosSinGuardar(){
        boolean blnRes=true;
        try{
            vecDat.clear();//Limpiar vector de datos.
            for(int i=0; i<arlDatRegModTieEje.size(); i++){
                vecReg=new Vector();
                vecReg.add(INT_TBL_DAT_LIN,"");
                vecReg.add(INT_TBL_DAT_COD_EMP,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_COD_EMP));
                vecReg.add(INT_TBL_DAT_COD_LOC,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_COD_LOC));
                vecReg.add(INT_TBL_DAT_COD_CLI,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_COD_CLI));
                vecReg.add(INT_TBL_DAT_NOM_CLI,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_NOM_CLI));
                vecReg.add(INT_TBL_DAT_COD_TIP_DOC, "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_COD_TIP_DOC));
                vecReg.add(INT_TBL_DAT_DES_COR,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_DES_COR));
                vecReg.add(INT_TBL_DAT_DES_LAR,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_DES_LAR));
                vecReg.add(INT_TBL_DAT_COD_DOC,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_COD_DOC));
                vecReg.add(INT_TBL_DAT_COD_REG,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_COD_REG));
                vecReg.add(INT_TBL_DAT_NUM_DOC,     "" + objUti.getStringValueAt(arlDatRegModTieEje, i, INT_TBL_ARL_NUM_DOC));
                vecDat.add(vecReg);
            }
            //Asignar vectores al modelo.
            objTblMod.setData(vecDat);
            tblDat.setModel(objTblMod);
            vecDat.clear();
        }
        catch(Exception e){
            objUti.mostrarMsgErr_F1(this, e);
            blnRes=false;
        }
        return blnRes;
    }






}
