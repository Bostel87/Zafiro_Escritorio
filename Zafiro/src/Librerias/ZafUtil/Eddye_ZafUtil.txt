Pendientes:
1) 
2) 
3) 

CONTROL DE VERSIONES:
=====================

v0.1: (Eddye Lino - 25/Abr/2006)
----
Se agregaron los métodos: getCantidadPalabras(String cantidad, String moneda) y getCantidadPalabras(double cantidad, String moneda)


v0.2: (Eddye Lino - 17/Jul/2006)
----
Se agregó el método: getDatosReportePredeterminado(java.awt.Component padre, String stringConexion, String usuario, String clave, int empresa, int local, int menu)


v0.3: (Eddye Lino - 20/Jul/2006)
----
Se agregó el método: recostearItmGrp(java.awt.Component padre, java.sql.Connection conexion, int intCodEmpGrp, int intCodEmp, String strCodItm)


v0.4: (Eddye Lino - 07/Sep/2006)
----
Se agregaron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) getUltimoDiaMes(int anio, int mes)
   3) getIntervalosMensualesRangoFechas(String strFecDes, String strFecHas, String strFor)


v0.5: (Eddye Lino - 10/Oct/2006)
----
Se agregaron los métodos: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) getIntervalosAnualesRangoFechas(String strFecDes, String strFecHas, String strFor)
   3) getAnio(String strFec, String strFor)
   4) getMes(String strFec, String strFor)
   5) getDia(String strFec, String strFor)
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.6: (Eddye Lino - 18/Oct/2006)
----
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.7: (Eddye Lino - 20/Oct/2006)
----
Se corrigieron los métodos: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.8: (Eddye Lino - 06/Nov/2006)
----
Se corrigieron los métodos: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.9: (Eddye Lino - 10/Nov/2006)
----
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.10: (Eddye Lino - 31/Ene/2007)
-----
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.11: (Eddye Lino - 09/Mar/2007)
-----
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.12: (Eddye Lino - 02/Abr/2007)
-----
Se corrigieron los métodos: 
   1) remayorizar(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, String strFecDes, String strFecHas, String strFor)


v0.13: (Eddye Lino - 13/Jun/2007)
-----
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En ambos métodos se agregó la siguiente línea al query donde se obtenía los saldos anteriores:
   strSQL+=" AND (a1.st_tipDev IS NULL OR a1.st_tipDev='C')";


v0.14: (Eddye Lino - 18/Jun/2007)
-----
Se agregaron los métodos: 
   1) getDirectorioSistema()


v0.15: (Eddye Lino - 20/Jun/2007)
-----
Se corrigieron los métodos: 
   1) getDirectorioSistema()


v0.16: (Eddye Lino - 19/Nov/2007)
-----
Se corrigió el método: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se corrigió el query donde se obtenía los saldos anteriores porque en ciertos casos no
obtenía el último registro sino el penúltimo.


v0.17: (Eddye Lino - 20/Nov/2007)
-----
Se corrigieron los métodos: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   2) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En ambos métodos se quitó la condición de que no considerara ciertas ordenes de trabajo que se realizaron a fin de año para matar negativos. Pero, que luego
fueron eliminadas porque en vez de hacer ordenes de trabajo se hicieron ajustes. El código que se quitó fue el siguiente:
        //TEMPORAL HASTA QUE SE BUSQUE UNA MEJOR FORMA DE HACERLO.
        if ( (this.getIntValueAt(arlDat, i, INT_REC_COD_EMP)==1 && this.getIntValueAt(arlDat, i, INT_REC_COD_LOC)==1 && this.getIntValueAt(arlDat, i, INT_REC_COD_TIP_DOC)==56 && (this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==542 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==543 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==544 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==546 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==548 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==549 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==550))
        || (this.getIntValueAt(arlDat, i, INT_REC_COD_EMP)==2 && this.getIntValueAt(arlDat, i, INT_REC_COD_LOC)==1 && this.getIntValueAt(arlDat, i, INT_REC_COD_TIP_DOC)==56 && (this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==4 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==5 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==6 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==7))
        || (this.getIntValueAt(arlDat, i, INT_REC_COD_EMP)==3 && this.getIntValueAt(arlDat, i, INT_REC_COD_LOC)==1 && this.getIntValueAt(arlDat, i, INT_REC_COD_TIP_DOC)==56 && (this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==1))
        || (this.getIntValueAt(arlDat, i, INT_REC_COD_EMP)==4 && this.getIntValueAt(arlDat, i, INT_REC_COD_LOC)==1 && this.getIntValueAt(arlDat, i, INT_REC_COD_TIP_DOC)==56 && (this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==7 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==8 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==9 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==10 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==11 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==12 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==13 || this.getIntValueAt(arlDat, i, INT_REC_COD_DOC)==14))
        )
        {
            System.out.println("No hacer: " + arlDat.get(i).toString());
        }
        else
        {

        }


v0.18: (Ingrid Lino - 07/Dic/2007   -  16h19)
-----
Modificado por Ing. Ingrid Lino ( se adicionó método setStringValueAt() con polimorfismo - usado en ZafCom27 )


v0.19: (Eddye Lino - 14/Dic/2007)
-----
Se corrigieron los métodos: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó una condición para que no se considerara el tipo de documento 76=AJUITM para calcular el costo promedio.
El código que se agregó fue el siguiente:
        //TEMPORAL HASTA QUE SE BUSQUE UNA MEJOR FORMA DE HACERLO. Se excluye el tipo de documento 76=AJUITM.
        if (this.getIntValueAt(arlDat, i, INT_REC_COD_TIP_DOC)!=76)
        {
            ...
        }


v0.20: (Eddye Lino - 17/Dic/2007)
-----
Se corrigieron los métodos: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se reubicó/recodifico la condición que se agregó en la versión anterior.
El código que se agregó fue el siguiente:
        //TEMPORAL HASTA QUE SE BUSQUE UNA MEJOR FORMA DE HACERLO: Se cambia el estado de costeo a "S" para el tipo de documento 76=AJUITM.
        if (this.getIntValueAt(arlDat, i, INT_REC_COD_TIP_DOC)==76)
        {
                ((java.util.ArrayList)arlDat.get(i)).set(INT_REC_EST_CUC, "S");
        }
Además, se modificó el código para que el campo "costo promedio" mantenga su valor y no se encere cuando las unidades lleguen a cero.


v0.21: (Eddye Lino - 11/Feb/2008)
-----
Se corrigió el método: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó la línea que aparece a continuación al query que obtiene los saldos iniciales.
        strSQL+=" AND (a1.st_tipDev IS NULL OR a1.st_tipDev='C')";


v0.22: (Eddye Lino - 18/Feb/2008)
-----
Se corrigió el método: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se cambiaron los querys para que trabajaran con el nuevo esquema de unificación de items.
Al principio la línea estaba así:
        strSQL+=" INNER JOIN tbm_equInv AS a3 ON (a2.co_emp=a3.co_emp AND a2.co_itm=a3.co_itm)";
Y quedó así:
        strSQL+=" INNER JOIN tbm_equInv AS a3 ON (a2.co_emp=a3.co_emp AND a2.co_itmAct=a3.co_itm)";


v0.23: (Eddye Lino - 19/Mar/2008)
-----
Se agregó el método: 
   1) utilizarClientesEmpresa(Librerias.ZafParSis.ZafParSis objParSis, int codigoEmpresa, int codigoLocal, int codigoUsuario)


v0.24: (Eddye Lino - 23/May/2008)
-----
Se corrigió el método: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se cambió el proceso de costeo para que se hiciera un costeo por transacción y no mensual como se lo estaba haciendo al principio.


v0.25: (Eddye Lino - 12/Ene/2009)
-----
Se corrigió el método: 
   1) recostearItm(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se agregó la siguiente condición:
    //Validar para el 2008 que no se tome en cuenta saldos en valores negativos si el saldo en unidades es 0 y el saldo en valores es negativo.
    if (getAnio(strFecDes, strFor)==2008 && getAnio(strFecHas, strFor)==2008)
    {
        if (dblSalIniUni==0 && dblSalIniVal<0)
            dblSalVal=0;
    }


v0.26: (Eddye Lino - 30/Abr/2008)
-----
Se agregaron los métodos: 
   1) getBigDecimalValueAt(java.util.Vector objeto, int row, int col)
   2) getBigDecimalValueAt(java.util.ArrayList objeto, int row, int col)
   3) redondearBigDecimal(BigDecimal numero, int decimales)
   4) redondearBigDecimal(String numero, int decimales)
   5) recostearItm2009RangoFechas(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
   6) recostearItm2009DesdeFecha(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFor)
   7) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)


v0.27: (Eddye Lino - 18/May/2009)
-----
Se corrigió el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se corrigió error que había cuando se invocaba desde el método "recostearItm2009DesdeFecha".


v0.28: (Eddye Lino - 01/Jun/2009)
-----
Se corrigió el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se corrigió error que existía con las transferencias de inventario. Las transferencias tienen 2 partes. El egreso
y el ingreso. Había casos donde se transfería todo el stock de una bodega a otra lo cual hacía que el costo
promedio para la siguiente transacción (ingreso) sea cero. Eso estaba mal ya que debería tomar el costo de
la transacción anterior (egreso). 


v0.29: (Eddye Lino - 08/Jun/2009)
-----
Se corrigió el método: 
   1) recostearItmGrp(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó las siguientes condiciones:
strSQL+=" AND ( (a1.fe_doc<'2009/05/01'"; //Periodo antes del 2009/05/01 (Excluir: compras y ventas entre empresas, transferencias de empresas).
strSQL+=" ) OR (a1.fe_doc>='2009/05/01') )";  //Periodo después del 2009/05/01 (Considerar todo).
A partir del "2009/05/01" el Sistema comenzó a trabajar como empresas en lugar de grupo.


v0.30: (Eddye Lino - 16/Jul/2009)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se agregó código para tambien poder recostear la empresa grupo.
Además se agregó en los querys para costear la empresa grupo lo siguiente:
    //Excluir los "INBOVA: Ingreso a bodega en valores" y "EGBOVA: Egreso de bodega en valores".
    strSQL+=" AND a1.co_tipDoc NOT IN (140, 141)";


v0.31: (Eddye Lino - 17/Ago/2009)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En dicho método se agregó código para que en la empresa grupo también se excluyeran las compras y ventas entre las
empresas del grupo para el periodo desde "2009/05/01" en adelante.


v0.32: (Eddye Lino - 31/Ago/2009)
-----
Se corrigió el método: 
   1) getUltimoDiaMes(int anio, int mes)
En dicho método se agregó la siguiente línea:
    cal.set(java.util.Calendar.DATE, 1);
Con esta línea se inicializa el día ya que se estaba dando el problema de que febrero
estaba devolviendo 31 en algunos meses cuando en realidad debería devolver 28 o 29
depedendiendo de si es bisiesto o no.


v0.33: (Eddye Lino - 30/Oct/2009)
-----
Se agregaron los métodos: 
   1) getAnio(java.util.Date fecha)
   2) getMes(java.util.Date fecha)
   3) getDia(java.util.Date fecha)


v0.34: (Eddye Lino - 12/Ago/2010)
-----
Se corrigió el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Para las devoluciones de ventas el Sistema obtiene el costo unitario de la factura asociada a la devolución.
En el proceso de unificación de items el campo "co_itm" de la factura se queda con el código viejo y el campo
"co_itmAct" con el código actual. Al tener la devolución el código actual no encontraría dicho código en la factura.
Es por eso que para éste caso se utiliza "co_itmAct" en lugar de "co_itm".
Además agregué códigos de nuevos tipos de documentos correspondientes a transferencias de inventario.
    case 171: //TRIACV: Transferencias de inventario automáticas (Cotizaciones de venta).
    case 172: //TRINRB: Transferencias de inventario (Reposición desde otras bodegas).


v0.35: (Eddye Lino - 23/Ago/2010)
-----
Se corrigió el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se tuvo que reestructurar el query porque así como estaba no funcionaba.


v0.36: (Eddye Lino - 27/Dic/2010)
-----
Se corrigió el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó código para que en las transferencias de inventario se utilizara el mismo costo unitario tanto para el egreso como para el ingreso.


v0.37: (Eddye Lino - 20/Feb/2013)
-----
Se agregó el método: 
   1) isNumeroDocumentoValido(java.awt.Component padre, String stringConexion, String usuario, String clave, int tabla, int codigoEmpresa, int codigoLocal, int codigoTipoDocumento, Integer codigoDocumento, javax.swing.JTextField numeroDocumento)


v0.38: (Eddye Lino - 28/Mar/2013)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Agregué la siguiente línea:
    case 204: //TRINIM: Transferencia de inventario (Importación).


v0.39: (Eddye Lino - 10/Feb/2015)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Agregué la siguiente línea:
    case 234: //TRINCL: Transferencias de inventario (Compras locales).


v0.40: (Eddye Lino - 02/Mar/2015)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Agregué la siguiente línea:
    case 229: //DEVVENE: Devolución de ventas (Electrónica)


v0.41: (Angie Bajaña - 22/May/2015)
-----
1) Se crea la funcion (codigoNombre) dentro de Librerias.ZafUtil.Zafutil.java para eliminar las tabulaciones y los espacios en blanco en el campo "txtNomCli" en Maestros.ZafMae07.ZafMae07.java


v0.42: (Angie Bajaña - 19/Jun/2015)
-----
1) Se cambia el nombre de la funcion codigoNombre() por el nombre remplazarEspacios() dentro de Librerias.ZafUtil.Zafutil.java 


v0.43: (Eddye Lino - 29/Jul/2015)
-----
Se modificó el método: 
   1) mostrarMsgErr_F1(java.awt.Component padre, Exception excepcion)
Se agregó la fecha y la hora en el mensaje.


v0.44: (Eddye Lino - 21/Oct/2015)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó lo siguiente:
//Incluir documentos donde CASTEK compró en terminal "L" pero TUVAL vendió en terminal "S".
strSQL+=" OR (a1.co_emp=1 AND a1.co_loc=4 AND a1.co_tipDoc=1 AND a1.co_doc=113238)";
strSQL+=" OR (a1.co_emp=2 AND a1.co_loc=1 AND a1.co_tipDoc=2 AND a1.co_doc=1195)";
strSQL+=" ))";
Se propuso quitar las líneas que excluyen los documentos de las relacionadas pero Werner dijo que NO porque después se movían los otros items.


v0.45: (Eddye Lino - 01/Jun/2016)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó redondeo en el calculo del "Saldo en valores":
bgdSalVal=redondearBigDecimal(bgdSalVal.add(this.getBigDecimalValueAt(arlDat, i, INT_REC_COS_TOT)), intNumDec);


v0.46: (Eddye Lino - 29/Dic/2016)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
A finales del 2016 Alfredo solicitó hacer unos ajuste en valores. A nivel de empresa dichos ajustes si se estaban considerando en el costeo.
Sin embargo en el costeo del Grupo se estaban exluyendo. Se le preguntó al Sr.Sensi y dijo que si se los considerara. Por eso se puso como comentario dicha validación.
//Excluir los "INBOVA: Ingreso a bodega en valores" y "EGBOVA: Egreso de bodega en valores". En Dic/2016 el Sr.Sensi dijo que ya no se excluyeran.
//strSQL+=" AND a1.co_tipDoc NOT IN (140, 141)";


v0.47: (José Mario Marín - 11/Ene/2017)
-----
Se agrego el metodo setDoubleValueAt()


v0.48: (Eddye Lino - 26/Sep/2017)
-----
Se agregó el método: 
   1) costearDocumento(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
Se agregó código para que se guarde datos en el campo "tbm_inv.nd_valExi" que se adicionó con la finalidad de costear en lugar de recostear.


v0.49: (Eddye Lino - 04/Ene/2018)
-----
Se modificó el método: 
   1) recostearItm2009(int intTipPro, java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection conexion, int intCodEmp, String strCodItm, String strFecDes, String strFecHas, String strFor)
En el año 2017 se comenzó a grabar registros con estado "I" en "tbm_detMovInv". Eso hizo que el recosteo falle porque se consideraba como activos todos los registros en "tbm_detMovInv".
Para solucionar el problema con el menor impacto se cambió "a1.st_reg" por "(CASE WHEN a2.st_reg='I' THEN 'I' ELSE a1.st_reg END) AS st_reg".


v0.50: (Eddye Lino - 09/Oct/2018)
-----
Se agregó el método: 
   1) costearDocumentoGrupo(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se modificó el método: 
   1) costearDocumento(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se agregó código para al costear el documento por empresa también se costee el documento por el grupo.


v0.51: (Eddye Lino - 14/Dic/2018)
-----
Se modificó el método: 
   1) costearDocumento(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se agregó código para generar el asiento de diario y actualizar los saldos de las cuentas en "tbm_salCta".


v0.52: (Eddye Lino - 19/Dic/2018)
-----
Se modificó el método: 
   1) costearDocumento(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se agregó codigo para que sólo se genere los asientos de diario por devoluciones de cantidades.


v0.53: (Eddye Lino - 11/Ene/2019)
-----
Se modificó el método: 
   1) costearDocumento(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se corrigió error en query que se encargaba de calcular el valor de la cuenta "Utilidad/Perdida".
Antes:
   strSQL+=" SET nd_salCta=(CASE WHEN tbm_salCta.nd_salCta IS NULL THEN 0 ELSE tbm_salCta.nd_salCta END) + c1.nd_salCta";
Después:
   strSQL+=" SET nd_salCta=c1.nd_salCta";
El problema era que en lugar de asignar el valor obtenido se estaba sumando el valor obtenido al valor de la cuenta "Utilidad/Perdida".
Eso ocasionaba que practicamente el valor de la cuenta "Utilidad/Perdida" se duplique.


v0.54: (Eddye Lino - 07/Feb/2019)
-----
Se modificó el método: 
   1) costearDocumento(java.awt.Component padre, Librerias.ZafParSis.ZafParSis objParSis, java.sql.Connection con, int intCodEmp, int intCodLoc, int intCodTipDoc, int intCodDoc)
Se puso como comentario las líneas correspondientes al proceso de mayorización debido a que se creó un trigger para mayorizar.

